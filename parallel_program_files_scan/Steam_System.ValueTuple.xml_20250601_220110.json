{"jsonrpc":"2.0","id":1,"result":{"content":[{"type":"text","text":"{\n  \"file_path\": \"/windows/Program Files (x86)/Steam/steamapps/common/EVGA PrecisionX/Library/System.ValueTuple.xml\",\n  \"metadata\": {\n    \"file_path\": \"/windows/Program Files (x86)/Steam/steamapps/common/EVGA PrecisionX/Library/System.ValueTuple.xml\",\n    \"file_name\": \"System.ValueTuple.xml\",\n    \"file_size\": 85027,\n    \"created\": \"2023-03-21T18:54:15.690815Z\",\n    \"modified\": \"2023-03-21T18:54:15.690815Z\",\n    \"accessed\": \"2025-05-30T11:23:18.663370900Z\",\n    \"permissions\": \"755\",\n    \"is_executable\": true,\n    \"mime_type\": \"application/octet-stream\",\n    \"hashes\": {\n      \"md5\": \"4a8f5829752a0318a5ad38df9b18153d\",\n      \"sha256\": \"b5c69cb0668b009900333ba825e11e70a5c0bef1d06f934f9cf60889a027aa73\",\n      \"sha512\": \"98897badef2e894de5f2a1029580dc44fee6fb98118f3dd5f477f99462c366c49d2345b277c02357703777bea04e5e5a6c109bed4bd0f7bc5fb861e1aef67a47\",\n      \"blake3\": \"251b025d1c66fcc7062023a60f7e7f20e14e1089c707b20c7ae76e3968478fe3\"\n    },\n    \"binary_info\": null,\n    \"extracted_strings\": null,\n    \"signature_info\": null,\n    \"hex_dump\": null,\n    \"owner_uid\": 1000,\n    \"group_gid\": 1000\n  },\n  \"hashes\": {\n    \"md5\": \"4a8f5829752a0318a5ad38df9b18153d\",\n    \"sha256\": \"b5c69cb0668b009900333ba825e11e70a5c0bef1d06f934f9cf60889a027aa73\",\n    \"sha512\": \"98897badef2e894de5f2a1029580dc44fee6fb98118f3dd5f477f99462c366c49d2345b277c02357703777bea04e5e5a6c109bed4bd0f7bc5fb861e1aef67a47\",\n    \"blake3\": \"251b025d1c66fcc7062023a60f7e7f20e14e1089c707b20c7ae76e3968478fe3\"\n  },\n  \"strings\": [\n    \"<?xml version=\\\"1.0\\\"?>\",\n    \"<doc>\",\n    \"    <assembly>\",\n    \"        <name>System.ValueTuple</name>\",\n    \"    </assembly>\",\n    \"    <members>\",\n    \"        <member name=\\\"T:System.Runtime.CompilerServices.TupleElementNamesAttribute\\\">\",\n    \"            <summary>\",\n    \"            Indicates that the use of <see cref=\\\"T:System.ValueTuple\\\"/> on a member is meant to be treated as a tuple with element names.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.Runtime.CompilerServices.TupleElementNamesAttribute.#ctor(System.String[])\\\">\",\n    \"            <summary>\",\n    \"            Initializes a new instance of the <see\",\n    \"            cref=\\\"T:System.Runtime.CompilerServices.TupleElementNamesAttribute\\\"/> class.\",\n    \"            </summary>\",\n    \"            <param name=\\\"transformNames\\\">\",\n    \"            Specifies, in a pre-order depth-first traversal of a type's\",\n    \"            construction, which <see cref=\\\"T:System.ValueType\\\"/> occurrences are\",\n    \"            meant to carry element names.\",\n    \"            </param>\",\n    \"            <remarks>\",\n    \"            This constructor is meant to be used on types that contain an\",\n    \"            instantiation of <see cref=\\\"T:System.ValueType\\\"/> that contains\",\n    \"            element names.  For instance, if <c>C</c> is a generic type with\",\n    \"            two type parameters, then a use of the constructed type <c>C{<see\",\n    \"            cref=\\\"T:System.ValueTuple`2\\\"/>, <see\",\n    \"            cref=\\\"T:System.ValueTuple`3\\\"/></c> might be intended to\",\n    \"            treat the first type argument as a tuple with element names and the\",\n    \"            second as a tuple without element names. In which case, the\",\n    \"            appropriate attribute specification should use a\",\n    \"            <c>transformNames</c> value of <c>{ \\\"name1\\\", \\\"name2\\\", null, null,\",\n    \"            null }</c>.\",\n    \"            </remarks>\",\n    \"        </member>\",\n    \"        <member name=\\\"P:System.Runtime.CompilerServices.TupleElementNamesAttribute.TransformNames\\\">\",\n    \"            <summary>\",\n    \"            Specifies, in a pre-order depth-first traversal of a type's\",\n    \"            construction, which <see cref=\\\"T:System.ValueTuple\\\"/> elements are\",\n    \"            meant to carry element names.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"T:System.TupleExtensions\\\">\",\n    \"            <summary>\",\n    \"            Provides extension methods for <see cref=\\\"T:System.Tuple\\\"/> instances to interop with C# tuples features (deconstruction syntax, converting from and to <see cref=\\\"T:System.ValueTuple\\\"/>).\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.Deconstruct``1(System.Tuple{``0},``0@)\\\">\",\n    \"            <summary>\",\n    \"            Deconstruct a properly nested <see cref=\\\"T:System.Tuple\\\"/> with 1 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.Deconstruct``2(System.Tuple{``0,``1},``0@,``1@)\\\">\",\n    \"            <summary>\",\n    \"            Deconstruct a properly nested <see cref=\\\"T:System.Tuple\\\"/> with 2 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.Deconstruct``3(System.Tuple{``0,``1,``2},``0@,``1@,``2@)\\\">\",\n    \"            <summary>\",\n    \"            Deconstruct a properly nested <see cref=\\\"T:System.Tuple\\\"/> with 3 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.Deconstruct``4(System.Tuple{``0,``1,``2,``3},``0@,``1@,``2@,``3@)\\\">\",\n    \"            <summary>\",\n    \"            Deconstruct a properly nested <see cref=\\\"T:System.Tuple\\\"/> with 4 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.Deconstruct``5(System.Tuple{``0,``1,``2,``3,``4},``0@,``1@,``2@,``3@,``4@)\\\">\",\n    \"            <summary>\",\n    \"            Deconstruct a properly nested <see cref=\\\"T:System.Tuple\\\"/> with 5 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.Deconstruct``6(System.Tuple{``0,``1,``2,``3,``4,``5},``0@,``1@,``2@,``3@,``4@,``5@)\\\">\",\n    \"            <summary>\",\n    \"            Deconstruct a properly nested <see cref=\\\"T:System.Tuple\\\"/> with 6 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.Deconstruct``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6},``0@,``1@,``2@,``3@,``4@,``5@,``6@)\\\">\",\n    \"            <summary>\",\n    \"            Deconstruct a properly nested <see cref=\\\"T:System.Tuple\\\"/> with 7 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.Deconstruct``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)\\\">\",\n    \"            <summary>\",\n    \"            Deconstruct a properly nested <see cref=\\\"T:System.Tuple\\\"/> with 8 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)\\\">\",\n    \"            <summary>\",\n    \"            Deconstruct a properly nested <see cref=\\\"T:System.Tuple\\\"/> with 9 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)\\\">\",\n    \"            <summary>\",\n    \"            Deconstruct a properly nested <see cref=\\\"T:System.Tuple\\\"/> with 10 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)\\\">\",\n    \"            <summary>\",\n    \"            Deconstruct a properly nested <see cref=\\\"T:System.Tuple\\\"/> with 11 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)\\\">\",\n    \"            <summary>\",\n    \"            Deconstruct a properly nested <see cref=\\\"T:System.Tuple\\\"/> with 12 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)\\\">\",\n    \"            <summary>\",\n    \"            Deconstruct a properly nested <see cref=\\\"T:System.Tuple\\\"/> with 13 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)\\\">\",\n    \"            <summary>\",\n    \"            Deconstruct a properly nested <see cref=\\\"T:System.Tuple\\\"/> with 14 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)\\\">\",\n    \"            <summary>\",\n    \"            Deconstruct a properly nested <see cref=\\\"T:System.Tuple\\\"/> with 15 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)\\\">\",\n    \"            <summary>\",\n    \"            Deconstruct a properly nested <see cref=\\\"T:System.Tuple\\\"/> with 16 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)\\\">\",\n    \"            <summary>\",\n    \"            Deconstruct a properly nested <see cref=\\\"T:System.Tuple\\\"/> with 17 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)\\\">\",\n    \"            <summary>\",\n    \"            Deconstruct a properly nested <see cref=\\\"T:System.Tuple\\\"/> with 18 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)\\\">\",\n    \"            <summary>\",\n    \"            Deconstruct a properly nested <see cref=\\\"T:System.Tuple\\\"/> with 19 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)\\\">\",\n    \"            <summary>\",\n    \"            Deconstruct a properly nested <see cref=\\\"T:System.Tuple\\\"/> with 20 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)\\\">\",\n    \"            <summary>\",\n    \"            Deconstruct a properly nested <see cref=\\\"T:System.Tuple\\\"/> with 21 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.ToValueTuple``1(System.Tuple{``0})\\\">\",\n    \"            <summary>\",\n    \"            Make a properly nested <see cref=\\\"T:System.ValueTuple\\\"/> from a properly nested <see cref=\\\"T:System.Tuple\\\"/> with 1 element.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.ToValueTuple``2(System.Tuple{``0,``1})\\\">\",\n    \"            <summary>\",\n    \"            Make a properly nested <see cref=\\\"T:System.ValueTuple\\\"/> from a properly nested <see cref=\\\"T:System.Tuple\\\"/> with 2 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.ToValueTuple``3(System.Tuple{``0,``1,``2})\\\">\",\n    \"            <summary>\",\n    \"            Make a properly nested <see cref=\\\"T:System.ValueTuple\\\"/> from a properly nested <see cref=\\\"T:System.Tuple\\\"/> with 3 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.ToValueTuple``4(System.Tuple{``0,``1,``2,``3})\\\">\",\n    \"            <summary>\",\n    \"            Make a properly nested <see cref=\\\"T:System.ValueTuple\\\"/> from a properly nested <see cref=\\\"T:System.Tuple\\\"/> with 4 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.ToValueTuple``5(System.Tuple{``0,``1,``2,``3,``4})\\\">\",\n    \"            <summary>\",\n    \"            Make a properly nested <see cref=\\\"T:System.ValueTuple\\\"/> from a properly nested <see cref=\\\"T:System.Tuple\\\"/> with 5 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.ToValueTuple``6(System.Tuple{``0,``1,``2,``3,``4,``5})\\\">\",\n    \"            <summary>\",\n    \"            Make a properly nested <see cref=\\\"T:System.ValueTuple\\\"/> from a properly nested <see cref=\\\"T:System.Tuple\\\"/> with 6 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.ToValueTuple``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6})\\\">\",\n    \"            <summary>\",\n    \"            Make a properly nested <see cref=\\\"T:System.ValueTuple\\\"/> from a properly nested <see cref=\\\"T:System.Tuple\\\"/> with 7 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.ToValueTuple``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}})\\\">\",\n    \"            <summary>\",\n    \"            Make a properly nested <see cref=\\\"T:System.ValueTuple\\\"/> from a properly nested <see cref=\\\"T:System.Tuple\\\"/> with 8 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.ToValueTuple``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}})\\\">\",\n    \"            <summary>\",\n    \"            Make a properly nested <see cref=\\\"T:System.ValueTuple\\\"/> from a properly nested <see cref=\\\"T:System.Tuple\\\"/> with 9 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.ToValueTuple``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}})\\\">\",\n    \"            <summary>\",\n    \"            Make a properly nested <see cref=\\\"T:System.ValueTuple\\\"/> from a properly nested <see cref=\\\"T:System.Tuple\\\"/> with 10 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.ToValueTuple``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}})\\\">\",\n    \"            <summary>\",\n    \"            Make a properly nested <see cref=\\\"T:System.ValueTuple\\\"/> from a properly nested <see cref=\\\"T:System.Tuple\\\"/> with 11 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.ToValueTuple``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}})\\\">\",\n    \"            <summary>\",\n    \"            Make a properly nested <see cref=\\\"T:System.ValueTuple\\\"/> from a properly nested <see cref=\\\"T:System.Tuple\\\"/> with 12 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.ToValueTuple``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}})\\\">\",\n    \"            <summary>\",\n    \"            Make a properly nested <see cref=\\\"T:System.ValueTuple\\\"/> from a properly nested <see cref=\\\"T:System.Tuple\\\"/> with 13 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.ToValueTuple``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}})\\\">\",\n    \"            <summary>\",\n    \"            Make a properly nested <see cref=\\\"T:System.ValueTuple\\\"/> from a properly nested <see cref=\\\"T:System.Tuple\\\"/> with 14 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})\\\">\",\n    \"            <summary>\",\n    \"            Make a properly nested <see cref=\\\"T:System.ValueTuple\\\"/> from a properly nested <see cref=\\\"T:System.Tuple\\\"/> with 15 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})\\\">\",\n    \"            <summary>\",\n    \"            Make a properly nested <see cref=\\\"T:System.ValueTuple\\\"/> from a properly nested <see cref=\\\"T:System.Tuple\\\"/> with 16 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})\\\">\",\n    \"            <summary>\",\n    \"            Make a properly nested <see cref=\\\"T:System.ValueTuple\\\"/> from a properly nested <see cref=\\\"T:System.Tuple\\\"/> with 17 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})\\\">\",\n    \"            <summary>\",\n    \"            Make a properly nested <see cref=\\\"T:System.ValueTuple\\\"/> from a properly nested <see cref=\\\"T:System.Tuple\\\"/> with 18 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})\\\">\",\n    \"            <summary>\",\n    \"            Make a properly nested <see cref=\\\"T:System.ValueTuple\\\"/> from a properly nested <see cref=\\\"T:System.Tuple\\\"/> with 19 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})\\\">\",\n    \"            <summary>\",\n    \"            Make a properly nested <see cref=\\\"T:System.ValueTuple\\\"/> from a properly nested <see cref=\\\"T:System.Tuple\\\"/> with 20 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})\\\">\",\n    \"            <summary>\",\n    \"            Make a properly nested <see cref=\\\"T:System.ValueTuple\\\"/> from a properly nested <see cref=\\\"T:System.Tuple\\\"/> with 21 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.ToTuple``1(System.ValueTuple{``0})\\\">\",\n    \"            <summary>\",\n    \"            Make a properly nested <see cref=\\\"T:System.Tuple\\\"/> from a properly nested <see cref=\\\"T:System.ValueTuple\\\"/> with 1 element.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.ToTuple``2(System.ValueTuple{``0,``1})\\\">\",\n    \"            <summary>\",\n    \"            Make a properly nested <see cref=\\\"T:System.Tuple\\\"/> from a properly nested <see cref=\\\"T:System.ValueTuple\\\"/> with 2 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.ToTuple``3(System.ValueTuple{``0,``1,``2})\\\">\",\n    \"            <summary>\",\n    \"            Make a properly nested <see cref=\\\"T:System.Tuple\\\"/> from a properly nested <see cref=\\\"T:System.ValueTuple\\\"/> with 3 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.ToTuple``4(System.ValueTuple{``0,``1,``2,``3})\\\">\",\n    \"            <summary>\",\n    \"            Make a properly nested <see cref=\\\"T:System.Tuple\\\"/> from a properly nested <see cref=\\\"T:System.ValueTuple\\\"/> with 4 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.ToTuple``5(System.ValueTuple{``0,``1,``2,``3,``4})\\\">\",\n    \"            <summary>\",\n    \"            Make a properly nested <see cref=\\\"T:System.Tuple\\\"/> from a properly nested <see cref=\\\"T:System.ValueTuple\\\"/> with 5 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.ToTuple``6(System.ValueTuple{``0,``1,``2,``3,``4,``5})\\\">\",\n    \"            <summary>\",\n    \"            Make a properly nested <see cref=\\\"T:System.Tuple\\\"/> from a properly nested <see cref=\\\"T:System.ValueTuple\\\"/> with 6 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.ToTuple``7(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6})\\\">\",\n    \"            <summary>\",\n    \"            Make a properly nested <see cref=\\\"T:System.Tuple\\\"/> from a properly nested <see cref=\\\"T:System.ValueTuple\\\"/> with 7 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.ToTuple``8(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7}})\\\">\",\n    \"            <summary>\",\n    \"            Make a properly nested <see cref=\\\"T:System.Tuple\\\"/> from a properly nested <see cref=\\\"T:System.ValueTuple\\\"/> with 8 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.ToTuple``9(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8}})\\\">\",\n    \"            <summary>\",\n    \"            Make a properly nested <see cref=\\\"T:System.Tuple\\\"/> from a properly nested <see cref=\\\"T:System.ValueTuple\\\"/> with 9 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.ToTuple``10(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9}})\\\">\",\n    \"            <summary>\",\n    \"            Make a properly nested <see cref=\\\"T:System.Tuple\\\"/> from a properly nested <see cref=\\\"T:System.ValueTuple\\\"/> with 10 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.ToTuple``11(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10}})\\\">\",\n    \"            <summary>\",\n    \"            Make a properly nested <see cref=\\\"T:System.Tuple\\\"/> from a properly nested <see cref=\\\"T:System.ValueTuple\\\"/> with 11 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.ToTuple``12(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11}})\\\">\",\n    \"            <summary>\",\n    \"            Make a properly nested <see cref=\\\"T:System.Tuple\\\"/> from a properly nested <see cref=\\\"T:System.ValueTuple\\\"/> with 12 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.ToTuple``13(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12}})\\\">\",\n    \"            <summary>\",\n    \"            Make a properly nested <see cref=\\\"T:System.Tuple\\\"/> from a properly nested <see cref=\\\"T:System.ValueTuple\\\"/> with 13 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.ToTuple``14(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13}})\\\">\",\n    \"            <summary>\",\n    \"            Make a properly nested <see cref=\\\"T:System.Tuple\\\"/> from a properly nested <see cref=\\\"T:System.ValueTuple\\\"/> with 14 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})\\\">\",\n    \"            <summary>\",\n    \"            Make a properly nested <see cref=\\\"T:System.Tuple\\\"/> from a properly nested <see cref=\\\"T:System.ValueTuple\\\"/> with 15 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})\\\">\",\n    \"            <summary>\",\n    \"            Make a properly nested <see cref=\\\"T:System.Tuple\\\"/> from a properly nested <see cref=\\\"T:System.ValueTuple\\\"/> with 16 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})\\\">\",\n    \"            <summary>\",\n    \"            Make a properly nested <see cref=\\\"T:System.Tuple\\\"/> from a properly nested <see cref=\\\"T:System.ValueTuple\\\"/> with 17 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})\\\">\",\n    \"            <summary>\",\n    \"            Make a properly nested <see cref=\\\"T:System.Tuple\\\"/> from a properly nested <see cref=\\\"T:System.ValueTuple\\\"/> with 18 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})\\\">\",\n    \"            <summary>\",\n    \"            Make a properly nested <see cref=\\\"T:System.Tuple\\\"/> from a properly nested <see cref=\\\"T:System.ValueTuple\\\"/> with 19 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})\\\">\",\n    \"            <summary>\",\n    \"            Make a properly nested <see cref=\\\"T:System.Tuple\\\"/> from a properly nested <see cref=\\\"T:System.ValueTuple\\\"/> with 20 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})\\\">\",\n    \"            <summary>\",\n    \"            Make a properly nested <see cref=\\\"T:System.Tuple\\\"/> from a properly nested <see cref=\\\"T:System.ValueTuple\\\"/> with 21 elements.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"T:System.ITupleInternal\\\">\",\n    \"            <summary>\",\n    \"            Helper so we can call some tuple methods recursively without knowing the underlying types.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"T:System.ValueTuple\\\">\",\n    \"            <summary>\",\n    \"            The ValueTuple types (from arity 0 to 8) comprise the runtime implementation that underlies tuples in C# and struct tuples in F#.\",\n    \"            Aside from created via language syntax, they are most easily created via the ValueTuple.Create factory methods.\",\n    \"            The System.ValueTuple types differ from the System.Tuple types in that:\",\n    \"            - they are structs rather than classes,\",\n    \"            - they are mutable rather than readonly, and\",\n    \"            - their members (such as Item1, Item2, etc) are fields rather than properties.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple.Equals(System.Object)\\\">\",\n    \"            <summary>\",\n    \"            Returns a value that indicates whether the current <see cref=\\\"T:System.ValueTuple\\\"/> instance is equal to a specified object.\",\n    \"            </summary>\",\n    \"            <param name=\\\"obj\\\">The object to compare with this instance.</param>\",\n    \"            <returns><see langword=\\\"true\\\"/> if <paramref name=\\\"obj\\\"/> is a <see cref=\\\"T:System.ValueTuple\\\"/>.</returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple.Equals(System.ValueTuple)\\\">\",\n    \"            <summary>Returns a value indicating whether this instance is equal to a specified value.</summary>\",\n    \"            <param name=\\\"other\\\">An instance to compare to this instance.</param>\",\n    \"            <returns>true if <paramref name=\\\"other\\\"/> has the same value as this instance; otherwise, false.</returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple.CompareTo(System.ValueTuple)\\\">\",\n    \"            <summary>Compares this instance to a specified instance and returns an indication of their relative values.</summary>\",\n    \"            <param name=\\\"other\\\">An instance to compare.</param>\",\n    \"            <returns>\",\n    \"            A signed number indicating the relative values of this instance and <paramref name=\\\"other\\\"/>.\",\n    \"            Returns less than zero if this instance is less than <paramref name=\\\"other\\\"/>, zero if this\",\n    \"            instance is equal to <paramref name=\\\"other\\\"/>, and greater than zero if this instance is greater \",\n    \"            than <paramref name=\\\"other\\\"/>.\",\n    \"            </returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple.GetHashCode\\\">\",\n    \"            <summary>Returns the hash code for this instance.</summary>\",\n    \"            <returns>A 32-bit signed integer hash code.</returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple.ToString\\\">\",\n    \"            <summary>\",\n    \"            Returns a string that represents the value of this <see cref=\\\"T:System.ValueTuple\\\"/> instance.\",\n    \"            </summary>\",\n    \"            <returns>The string representation of this <see cref=\\\"T:System.ValueTuple\\\"/> instance.</returns>\",\n    \"            <remarks>\",\n    \"            The string returned by this method takes the form <c>()</c>.\",\n    \"            </remarks>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple.Create\\\">\",\n    \"            <summary>Creates a new struct 0-tuple.</summary>\",\n    \"            <returns>A 0-tuple.</returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple.Create``1(``0)\\\">\",\n    \"            <summary>Creates a new struct 1-tuple, or singleton.</summary>\",\n    \"            <typeparam name=\\\"T1\\\">The type of the first component of the tuple.</typeparam>\",\n    \"            <param name=\\\"item1\\\">The value of the first component of the tuple.</param>\",\n    \"            <returns>A 1-tuple (singleton) whose value is (item1).</returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple.Create``2(``0,``1)\\\">\",\n    \"            <summary>Creates a new struct 2-tuple, or pair.</summary>\",\n    \"            <typeparam name=\\\"T1\\\">The type of the first component of the tuple.</typeparam>\",\n    \"            <typeparam name=\\\"T2\\\">The type of the second component of the tuple.</typeparam>\",\n    \"            <param name=\\\"item1\\\">The value of the first component of the tuple.</param>\",\n    \"            <param name=\\\"item2\\\">The value of the second component of the tuple.</param>\",\n    \"            <returns>A 2-tuple (pair) whose value is (item1, item2).</returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple.Create``3(``0,``1,``2)\\\">\",\n    \"            <summary>Creates a new struct 3-tuple, or triple.</summary>\",\n    \"            <typeparam name=\\\"T1\\\">The type of the first component of the tuple.</typeparam>\",\n    \"            <typeparam name=\\\"T2\\\">The type of the second component of the tuple.</typeparam>\",\n    \"            <typeparam name=\\\"T3\\\">The type of the third component of the tuple.</typeparam>\",\n    \"            <param name=\\\"item1\\\">The value of the first component of the tuple.</param>\",\n    \"            <param name=\\\"item2\\\">The value of the second component of the tuple.</param>\",\n    \"            <param name=\\\"item3\\\">The value of the third component of the tuple.</param>\",\n    \"            <returns>A 3-tuple (triple) whose value is (item1, item2, item3).</returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple.Create``4(``0,``1,``2,``3)\\\">\",\n    \"            <summary>Creates a new struct 4-tuple, or quadruple.</summary>\",\n    \"            <typeparam name=\\\"T1\\\">The type of the first component of the tuple.</typeparam>\",\n    \"            <typeparam name=\\\"T2\\\">The type of the second component of the tuple.</typeparam>\",\n    \"            <typeparam name=\\\"T3\\\">The type of the third component of the tuple.</typeparam>\",\n    \"            <typeparam name=\\\"T4\\\">The type of the fourth component of the tuple.</typeparam>\",\n    \"            <param name=\\\"item1\\\">The value of the first component of the tuple.</param>\",\n    \"            <param name=\\\"item2\\\">The value of the second component of the tuple.</param>\",\n    \"            <param name=\\\"item3\\\">The value of the third component of the tuple.</param>\",\n    \"            <param name=\\\"item4\\\">The value of the fourth component of the tuple.</param>\",\n    \"            <returns>A 4-tuple (quadruple) whose value is (item1, item2, item3, item4).</returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple.Create``5(``0,``1,``2,``3,``4)\\\">\",\n    \"            <summary>Creates a new struct 5-tuple, or quintuple.</summary>\",\n    \"            <typeparam name=\\\"T1\\\">The type of the first component of the tuple.</typeparam>\",\n    \"            <typeparam name=\\\"T2\\\">The type of the second component of the tuple.</typeparam>\",\n    \"            <typeparam name=\\\"T3\\\">The type of the third component of the tuple.</typeparam>\",\n    \"            <typeparam name=\\\"T4\\\">The type of the fourth component of the tuple.</typeparam>\",\n    \"            <typeparam name=\\\"T5\\\">The type of the fifth component of the tuple.</typeparam>\",\n    \"            <param name=\\\"item1\\\">The value of the first component of the tuple.</param>\",\n    \"            <param name=\\\"item2\\\">The value of the second component of the tuple.</param>\",\n    \"            <param name=\\\"item3\\\">The value of the third component of the tuple.</param>\",\n    \"            <param name=\\\"item4\\\">The value of the fourth component of the tuple.</param>\",\n    \"            <param name=\\\"item5\\\">The value of the fifth component of the tuple.</param>\",\n    \"            <returns>A 5-tuple (quintuple) whose value is (item1, item2, item3, item4, item5).</returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple.Create``6(``0,``1,``2,``3,``4,``5)\\\">\",\n    \"            <summary>Creates a new struct 6-tuple, or sextuple.</summary>\",\n    \"            <typeparam name=\\\"T1\\\">The type of the first component of the tuple.</typeparam>\",\n    \"            <typeparam name=\\\"T2\\\">The type of the second component of the tuple.</typeparam>\",\n    \"            <typeparam name=\\\"T3\\\">The type of the third component of the tuple.</typeparam>\",\n    \"            <typeparam name=\\\"T4\\\">The type of the fourth component of the tuple.</typeparam>\",\n    \"            <typeparam name=\\\"T5\\\">The type of the fifth component of the tuple.</typeparam>\",\n    \"            <typeparam name=\\\"T6\\\">The type of the sixth component of the tuple.</typeparam>\",\n    \"            <param name=\\\"item1\\\">The value of the first component of the tuple.</param>\",\n    \"            <param name=\\\"item2\\\">The value of the second component of the tuple.</param>\",\n    \"            <param name=\\\"item3\\\">The value of the third component of the tuple.</param>\",\n    \"            <param name=\\\"item4\\\">The value of the fourth component of the tuple.</param>\",\n    \"            <param name=\\\"item5\\\">The value of the fifth component of the tuple.</param>\",\n    \"            <param name=\\\"item6\\\">The value of the sixth component of the tuple.</param>\",\n    \"            <returns>A 6-tuple (sextuple) whose value is (item1, item2, item3, item4, item5, item6).</returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple.Create``7(``0,``1,``2,``3,``4,``5,``6)\\\">\",\n    \"            <summary>Creates a new struct 7-tuple, or septuple.</summary>\",\n    \"            <typeparam name=\\\"T1\\\">The type of the first component of the tuple.</typeparam>\",\n    \"            <typeparam name=\\\"T2\\\">The type of the second component of the tuple.</typeparam>\",\n    \"            <typeparam name=\\\"T3\\\">The type of the third component of the tuple.</typeparam>\",\n    \"            <typeparam name=\\\"T4\\\">The type of the fourth component of the tuple.</typeparam>\",\n    \"            <typeparam name=\\\"T5\\\">The type of the fifth component of the tuple.</typeparam>\",\n    \"            <typeparam name=\\\"T6\\\">The type of the sixth component of the tuple.</typeparam>\",\n    \"            <typeparam name=\\\"T7\\\">The type of the seventh component of the tuple.</typeparam>\",\n    \"            <param name=\\\"item1\\\">The value of the first component of the tuple.</param>\",\n    \"            <param name=\\\"item2\\\">The value of the second component of the tuple.</param>\",\n    \"            <param name=\\\"item3\\\">The value of the third component of the tuple.</param>\",\n    \"            <param name=\\\"item4\\\">The value of the fourth component of the tuple.</param>\",\n    \"            <param name=\\\"item5\\\">The value of the fifth component of the tuple.</param>\",\n    \"            <param name=\\\"item6\\\">The value of the sixth component of the tuple.</param>\",\n    \"            <param name=\\\"item7\\\">The value of the seventh component of the tuple.</param>\",\n    \"            <returns>A 7-tuple (septuple) whose value is (item1, item2, item3, item4, item5, item6, item7).</returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)\\\">\",\n    \"            <summary>Creates a new struct 8-tuple, or octuple.</summary>\",\n    \"            <typeparam name=\\\"T1\\\">The type of the first component of the tuple.</typeparam>\",\n    \"            <typeparam name=\\\"T2\\\">The type of the second component of the tuple.</typeparam>\",\n    \"            <typeparam name=\\\"T3\\\">The type of the third component of the tuple.</typeparam>\",\n    \"            <typeparam name=\\\"T4\\\">The type of the fourth component of the tuple.</typeparam>\",\n    \"            <typeparam name=\\\"T5\\\">The type of the fifth component of the tuple.</typeparam>\",\n    \"            <typeparam name=\\\"T6\\\">The type of the sixth component of the tuple.</typeparam>\",\n    \"            <typeparam name=\\\"T7\\\">The type of the seventh component of the tuple.</typeparam>\",\n    \"            <typeparam name=\\\"T8\\\">The type of the eighth component of the tuple.</typeparam>\",\n    \"            <param name=\\\"item1\\\">The value of the first component of the tuple.</param>\",\n    \"            <param name=\\\"item2\\\">The value of the second component of the tuple.</param>\",\n    \"            <param name=\\\"item3\\\">The value of the third component of the tuple.</param>\",\n    \"            <param name=\\\"item4\\\">The value of the fourth component of the tuple.</param>\",\n    \"            <param name=\\\"item5\\\">The value of the fifth component of the tuple.</param>\",\n    \"            <param name=\\\"item6\\\">The value of the sixth component of the tuple.</param>\",\n    \"            <param name=\\\"item7\\\">The value of the seventh component of the tuple.</param>\",\n    \"            <param name=\\\"item8\\\">The value of the eighth component of the tuple.</param>\",\n    \"            <returns>An 8-tuple (octuple) whose value is (item1, item2, item3, item4, item5, item6, item7, item8).</returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"T:System.ValueTuple`1\\\">\",\n    \"            <summary>Represents a 1-tuple, or singleton, as a value type.</summary>\",\n    \"            <typeparam name=\\\"T1\\\">The type of the tuple's only component.</typeparam>\",\n    \"        </member>\",\n    \"        <member name=\\\"F:System.ValueTuple`1.Item1\\\">\",\n    \"            <summary>\",\n    \"            The current <see cref=\\\"T:System.ValueTuple`1\\\"/> instance's first component.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple`1.#ctor(`0)\\\">\",\n    \"            <summary>\",\n    \"            Initializes a new instance of the <see cref=\\\"T:System.ValueTuple`1\\\"/> value type.\",\n    \"            </summary>\",\n    \"            <param name=\\\"item1\\\">The value of the tuple's first component.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple`1.Equals(System.Object)\\\">\",\n    \"            <summary>\",\n    \"            Returns a value that indicates whether the current <see cref=\\\"T:System.ValueTuple`1\\\"/> instance is equal to a specified object.\",\n    \"            </summary>\",\n    \"            <param name=\\\"obj\\\">The object to compare with this instance.</param>\",\n    \"            <returns><see langword=\\\"true\\\"/> if the current instance is equal to the specified object; otherwise, <see langword=\\\"false\\\"/>.</returns>\",\n    \"            <remarks>\",\n    \"            The <paramref name=\\\"obj\\\"/> parameter is considered to be equal to the current instance under the following conditions:\",\n    \"            <list type=\\\"bullet\\\">\",\n    \"                <item><description>It is a <see cref=\\\"T:System.ValueTuple`1\\\"/> value type.</description></item>\",\n    \"                <item><description>Its components are of the same types as those of the current instance.</description></item>\",\n    \"                <item><description>Its components are equal to those of the current instance. Equality is determined by the default object equality comparer for each component.</description></item>\",\n    \"            </list>\",\n    \"            </remarks>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple`1.Equals(System.ValueTuple{`0})\\\">\",\n    \"            <summary>\",\n    \"            Returns a value that indicates whether the current <see cref=\\\"T:System.ValueTuple`1\\\"/>\",\n    \"            instance is equal to a specified <see cref=\\\"T:System.ValueTuple`1\\\"/>.\",\n    \"            </summary>\",\n    \"            <param name=\\\"other\\\">The tuple to compare with this instance.</param>\",\n    \"            <returns><see langword=\\\"true\\\"/> if the current instance is equal to the specified tuple; otherwise, <see langword=\\\"false\\\"/>.</returns>\",\n    \"            <remarks>\",\n    \"            The <paramref name=\\\"other\\\"/> parameter is considered to be equal to the current instance if each of its field\",\n    \"            is equal to that of the current instance, using the default comparer for that field's type.\",\n    \"            </remarks>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple`1.CompareTo(System.ValueTuple{`0})\\\">\",\n    \"            <summary>Compares this instance to a specified instance and returns an indication of their relative values.</summary>\",\n    \"            <param name=\\\"other\\\">An instance to compare.</param>\",\n    \"            <returns>\",\n    \"            A signed number indicating the relative values of this instance and <paramref name=\\\"other\\\"/>.\",\n    \"            Returns less than zero if this instance is less than <paramref name=\\\"other\\\"/>, zero if this\",\n    \"            instance is equal to <paramref name=\\\"other\\\"/>, and greater than zero if this instance is greater \",\n    \"            than <paramref name=\\\"other\\\"/>.\",\n    \"            </returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple`1.GetHashCode\\\">\",\n    \"            <summary>\",\n    \"            Returns the hash code for the current <see cref=\\\"T:System.ValueTuple`1\\\"/> instance.\",\n    \"            </summary>\",\n    \"            <returns>A 32-bit signed integer hash code.</returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple`1.ToString\\\">\",\n    \"            <summary>\",\n    \"            Returns a string that represents the value of this <see cref=\\\"T:System.ValueTuple`1\\\"/> instance.\",\n    \"            </summary>\",\n    \"            <returns>The string representation of this <see cref=\\\"T:System.ValueTuple`1\\\"/> instance.</returns>\",\n    \"            <remarks>\",\n    \"            The string returned by this method takes the form <c>(Item1)</c>,\",\n    \"            where <c>Item1</c> represents the value of <see cref=\\\"F:System.ValueTuple`1.Item1\\\"/>. If the field is <see langword=\\\"null\\\"/>,\",\n    \"            it is represented as <see cref=\\\"F:System.String.Empty\\\"/>.\",\n    \"            </remarks>\",\n    \"        </member>\",\n    \"        <member name=\\\"T:System.ValueTuple`2\\\">\",\n    \"            <summary>\",\n    \"            Represents a 2-tuple, or pair, as a value type.\",\n    \"            </summary>\",\n    \"            <typeparam name=\\\"T1\\\">The type of the tuple's first component.</typeparam>\",\n    \"            <typeparam name=\\\"T2\\\">The type of the tuple's second component.</typeparam>\",\n    \"        </member>\",\n    \"        <member name=\\\"F:System.ValueTuple`2.Item1\\\">\",\n    \"            <summary>\",\n    \"            The current <see cref=\\\"T:System.ValueTuple`2\\\"/> instance's first component.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"F:System.ValueTuple`2.Item2\\\">\",\n    \"            <summary>\",\n    \"            The current <see cref=\\\"T:System.ValueTuple`2\\\"/> instance's second component.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple`2.#ctor(`0,`1)\\\">\",\n    \"            <summary>\",\n    \"            Initializes a new instance of the <see cref=\\\"T:System.ValueTuple`2\\\"/> value type.\",\n    \"            </summary>\",\n    \"            <param name=\\\"item1\\\">The value of the tuple's first component.</param>\",\n    \"            <param name=\\\"item2\\\">The value of the tuple's second component.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple`2.Equals(System.Object)\\\">\",\n    \"             <summary>\",\n    \"             Returns a value that indicates whether the current <see cref=\\\"T:System.ValueTuple`2\\\"/> instance is equal to a specified object.\",\n    \"             </summary>\",\n    \"             <param name=\\\"obj\\\">The object to compare with this instance.</param>\",\n    \"             <returns><see langword=\\\"true\\\"/> if the current instance is equal to the specified object; otherwise, <see langword=\\\"false\\\"/>.</returns>\",\n    \"            \",\n    \"             <remarks>\",\n    \"             The <paramref name=\\\"obj\\\"/> parameter is considered to be equal to the current instance under the following conditions:\",\n    \"             <list type=\\\"bullet\\\">\",\n    \"                 <item><description>It is a <see cref=\\\"T:System.ValueTuple`2\\\"/> value type.</description></item>\",\n    \"                 <item><description>Its components are of the same types as those of the current instance.</description></item>\",\n    \"                 <item><description>Its components are equal to those of the current instance. Equality is determined by the default object equality comparer for each component.</description></item>\",\n    \"             </list>\",\n    \"             </remarks>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple`2.Equals(System.ValueTuple{`0,`1})\\\">\",\n    \"            <summary>\",\n    \"            Returns a value that indicates whether the current <see cref=\\\"T:System.ValueTuple`2\\\"/> instance is equal to a specified <see cref=\\\"T:System.ValueTuple`2\\\"/>.\",\n    \"            </summary>\",\n    \"            <param name=\\\"other\\\">The tuple to compare with this instance.</param>\",\n    \"            <returns><see langword=\\\"true\\\"/> if the current instance is equal to the specified tuple; otherwise, <see langword=\\\"false\\\"/>.</returns>\",\n    \"            <remarks>\",\n    \"            The <paramref name=\\\"other\\\"/> parameter is considered to be equal to the current instance if each of its fields\",\n    \"            are equal to that of the current instance, using the default comparer for that field's type.\",\n    \"            </remarks>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple`2.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\\\">\",\n    \"             <summary>\",\n    \"             Returns a value that indicates whether the current <see cref=\\\"T:System.ValueTuple`2\\\"/> instance is equal to a specified object based on a specified comparison method.\",\n    \"             </summary>\",\n    \"             <param name=\\\"other\\\">The object to compare with this instance.</param>\",\n    \"             <param name=\\\"comparer\\\">An object that defines the method to use to evaluate whether the two objects are equal.</param>\",\n    \"             <returns><see langword=\\\"true\\\"/> if the current instance is equal to the specified object; otherwise, <see langword=\\\"false\\\"/>.</returns>\",\n    \"            \",\n    \"             <remarks>\",\n    \"             This member is an explicit interface member implementation. It can be used only when the\",\n    \"              <see cref=\\\"T:System.ValueTuple`2\\\"/> instance is cast to an <see cref=\\\"T:System.Collections.IStructuralEquatable\\\"/> interface.\",\n    \"            \",\n    \"             The <see cref=\\\"M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)\\\"/> implementation is called only if <c>other</c> is not <see langword=\\\"null\\\"/>,\",\n    \"              and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <see cref=\\\"T:System.ValueTuple`2\\\"/>\",\n    \"              whose components are of the same types as those of the current instance. The IStructuralEquatable.Equals(Object,\",\n    \"IEqualityComparer) method\",\n    \"              first passes the <see cref=\\\"F:System.ValueTuple`2.Item1\\\"/> values of the <see cref=\\\"T:System.ValueTuple`2\\\"/> objects to be compared to the\",\n    \"              <see cref=\\\"M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)\\\"/> implementation. If this method call returns <see langword=\\\"true\\\"/>, the method is\",\n    \"              called again and passed the <see cref=\\\"F:System.ValueTuple`2.Item2\\\"/> values of the two <see cref=\\\"T:System.ValueTuple`2\\\"/> instances.\",\n    \"             </remarks>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple`2.CompareTo(System.ValueTuple{`0,`1})\\\">\",\n    \"            <summary>Compares this instance to a specified instance and returns an indication of their relative values.</summary>\",\n    \"            <param name=\\\"other\\\">An instance to compare.</param>\",\n    \"            <returns>\",\n    \"            A signed number indicating the relative values of this instance and <paramref name=\\\"other\\\"/>.\",\n    \"            Returns less than zero if this instance is less than <paramref name=\\\"other\\\"/>, zero if this\",\n    \"            instance is equal to <paramref name=\\\"other\\\"/>, and greater than zero if this instance is greater \",\n    \"            than <paramref name=\\\"other\\\"/>.\",\n    \"            </returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple`2.GetHashCode\\\">\",\n    \"            <summary>\",\n    \"            Returns the hash code for the current <see cref=\\\"T:System.ValueTuple`2\\\"/> instance.\",\n    \"            </summary>\",\n    \"            <returns>A 32-bit signed integer hash code.</returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple`2.ToString\\\">\",\n    \"            <summary>\",\n    \"            Returns a string that represents the value of this <see cref=\\\"T:System.ValueTuple`2\\\"/> instance.\",\n    \"            </summary>\",\n    \"            <returns>The string representation of this <see cref=\\\"T:System.ValueTuple`2\\\"/> instance.</returns>\",\n    \"            <remarks>\",\n    \"            The string returned by this method takes the form <c>(Item1, Item2)</c>,\",\n    \"            where <c>Item1</c> and <c>Item2</c> represent the values of the <see cref=\\\"F:System.ValueTuple`2.Item1\\\"/>\",\n    \"            and <see cref=\\\"F:System.ValueTuple`2.Item2\\\"/> fields. If either field value is <see langword=\\\"null\\\"/>,\",\n    \"            it is represented as <see cref=\\\"F:System.String.Empty\\\"/>.\",\n    \"            </remarks>\",\n    \"        </member>\",\n    \"        <member name=\\\"T:System.ValueTuple`3\\\">\",\n    \"            <summary>\",\n    \"            Represents a 3-tuple, or triple, as a value type.\",\n    \"            </summary>\",\n    \"            <typeparam name=\\\"T1\\\">The type of the tuple's first component.</typeparam>\",\n    \"            <typeparam name=\\\"T2\\\">The type of the tuple's second component.</typeparam>\",\n    \"            <typeparam name=\\\"T3\\\">The type of the tuple's third component.</typeparam>\",\n    \"        </member>\",\n    \"        <member name=\\\"F:System.ValueTuple`3.Item1\\\">\",\n    \"            <summary>\",\n    \"            The current <see cref=\\\"T:System.ValueTuple`3\\\"/> instance's first component.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"F:System.ValueTuple`3.Item2\\\">\",\n    \"            <summary>\",\n    \"            The current <see cref=\\\"T:System.ValueTuple`3\\\"/> instance's second component.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"F:System.ValueTuple`3.Item3\\\">\",\n    \"            <summary>\",\n    \"            The current <see cref=\\\"T:System.ValueTuple`3\\\"/> instance's third component.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple`3.#ctor(`0,`1,`2)\\\">\",\n    \"            <summary>\",\n    \"            Initializes a new instance of the <see cref=\\\"T:System.ValueTuple`3\\\"/> value type.\",\n    \"            </summary>\",\n    \"            <param name=\\\"item1\\\">The value of the tuple's first component.</param>\",\n    \"            <param name=\\\"item2\\\">The value of the tuple's second component.</param>\",\n    \"            <param name=\\\"item3\\\">The value of the tuple's third component.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple`3.Equals(System.Object)\\\">\",\n    \"            <summary>\",\n    \"            Returns a value that indicates whether the current <see cref=\\\"T:System.ValueTuple`3\\\"/> instance is equal to a specified object.\",\n    \"            </summary>\",\n    \"            <param name=\\\"obj\\\">The object to compare with this instance.</param>\",\n    \"            <returns><see langword=\\\"true\\\"/> if the current instance is equal to the specified object; otherwise, <see langword=\\\"false\\\"/>.</returns>\",\n    \"            <remarks>\",\n    \"            The <paramref name=\\\"obj\\\"/> parameter is considered to be equal to the current instance under the following conditions:\",\n    \"            <list type=\\\"bullet\\\">\",\n    \"                <item><description>It is a <see cref=\\\"T:System.ValueTuple`3\\\"/> value type.</description></item>\",\n    \"                <item><description>Its components are of the same types as those of the current instance.</description></item>\",\n    \"                <item><description>Its components are equal to those of the current instance. Equality is determined by the default object equality comparer for each component.</description></item>\",\n    \"            </list>\",\n    \"            </remarks>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple`3.Equals(System.ValueTuple{`0,`1,`2})\\\">\",\n    \"            <summary>\",\n    \"            Returns a value that indicates whether the current <see cref=\\\"T:System.ValueTuple`3\\\"/>\",\n    \"            instance is equal to a specified <see cref=\\\"T:System.ValueTuple`3\\\"/>.\",\n    \"            </summary>\",\n    \"            <param name=\\\"other\\\">The tuple to compare with this instance.</param>\",\n    \"            <returns><see langword=\\\"true\\\"/> if the current instance is equal to the specified tuple; otherwise, <see langword=\\\"false\\\"/>.</returns>\",\n    \"            <remarks>\",\n    \"            The <paramref name=\\\"other\\\"/> parameter is considered to be equal to the current instance if each of its fields\",\n    \"            are equal to that of the current instance, using the default comparer for that field's type.\",\n    \"            </remarks>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple`3.CompareTo(System.ValueTuple{`0,`1,`2})\\\">\",\n    \"            <summary>Compares this instance to a specified instance and returns an indication of their relative values.</summary>\",\n    \"            <param name=\\\"other\\\">An instance to compare.</param>\",\n    \"            <returns>\",\n    \"            A signed number indicating the relative values of this instance and <paramref name=\\\"other\\\"/>.\",\n    \"            Returns less than zero if this instance is less than <paramref name=\\\"other\\\"/>, zero if this\",\n    \"            instance is equal to <paramref name=\\\"other\\\"/>, and greater than zero if this instance is greater \",\n    \"            than <paramref name=\\\"other\\\"/>.\",\n    \"            </returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple`3.GetHashCode\\\">\",\n    \"            <summary>\",\n    \"            Returns the hash code for the current <see cref=\\\"T:System.ValueTuple`3\\\"/> instance.\",\n    \"            </summary>\",\n    \"            <returns>A 32-bit signed integer hash code.</returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple`3.ToString\\\">\",\n    \"            <summary>\",\n    \"            Returns a string that represents the value of this <see cref=\\\"T:System.ValueTuple`3\\\"/> instance.\",\n    \"            </summary>\",\n    \"            <returns>The string representation of this <see cref=\\\"T:System.ValueTuple`3\\\"/> instance.</returns>\",\n    \"            <remarks>\",\n    \"            The string returned by this method takes the form <c>(Item1, Item2, Item3)</c>.\",\n    \"            If any field value is <see langword=\\\"null\\\"/>, it is represented as <see cref=\\\"F:System.String.Empty\\\"/>.\",\n    \"            </remarks>\",\n    \"        </member>\",\n    \"        <member name=\\\"T:System.ValueTuple`4\\\">\",\n    \"            <summary>\",\n    \"            Represents a 4-tuple, or quadruple, as a value type.\",\n    \"            </summary>\",\n    \"            <typeparam name=\\\"T1\\\">The type of the tuple's first component.</typeparam>\",\n    \"            <typeparam name=\\\"T2\\\">The type of the tuple's second component.</typeparam>\",\n    \"            <typeparam name=\\\"T3\\\">The type of the tuple's third component.</typeparam>\",\n    \"            <typeparam name=\\\"T4\\\">The type of the tuple's fourth component.</typeparam>\",\n    \"        </member>\",\n    \"        <member name=\\\"F:System.ValueTuple`4.Item1\\\">\",\n    \"            <summary>\",\n    \"            The current <see cref=\\\"T:System.ValueTuple`4\\\"/> instance's first component.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"F:System.ValueTuple`4.Item2\\\">\",\n    \"            <summary>\",\n    \"            The current <see cref=\\\"T:System.ValueTuple`4\\\"/> instance's second component.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"F:System.ValueTuple`4.Item3\\\">\",\n    \"            <summary>\",\n    \"            The current <see cref=\\\"T:System.ValueTuple`4\\\"/> instance's third component.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"F:System.ValueTuple`4.Item4\\\">\",\n    \"            <summary>\",\n    \"            The current <see cref=\\\"T:System.ValueTuple`4\\\"/> instance's fourth component.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple`4.#ctor(`0,`1,`2,`3)\\\">\",\n    \"            <summary>\",\n    \"            Initializes a new instance of the <see cref=\\\"T:System.ValueTuple`4\\\"/> value type.\",\n    \"            </summary>\",\n    \"            <param name=\\\"item1\\\">The value of the tuple's first component.</param>\",\n    \"            <param name=\\\"item2\\\">The value of the tuple's second component.</param>\",\n    \"            <param name=\\\"item3\\\">The value of the tuple's third component.</param>\",\n    \"            <param name=\\\"item4\\\">The value of the tuple's fourth component.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple`4.Equals(System.Object)\\\">\",\n    \"            <summary>\",\n    \"            Returns a value that indicates whether the current <see cref=\\\"T:System.ValueTuple`4\\\"/> instance is equal to a specified object.\",\n    \"            </summary>\",\n    \"            <param name=\\\"obj\\\">The object to compare with this instance.</param>\",\n    \"            <returns><see langword=\\\"true\\\"/> if the current instance is equal to the specified object; otherwise, <see langword=\\\"false\\\"/>.</returns>\",\n    \"            <remarks>\",\n    \"            The <paramref name=\\\"obj\\\"/> parameter is considered to be equal to the current instance under the following conditions:\",\n    \"            <list type=\\\"bullet\\\">\",\n    \"                <item><description>It is a <see cref=\\\"T:System.ValueTuple`4\\\"/> value type.</description></item>\",\n    \"                <item><description>Its components are of the same types as those of the current instance.</description></item>\",\n    \"                <item><description>Its components are equal to those of the current instance. Equality is determined by the default object equality comparer for each component.</description></item>\",\n    \"            </list>\",\n    \"            </remarks>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple`4.Equals(System.ValueTuple{`0,`1,`2,`3})\\\">\",\n    \"            <summary>\",\n    \"            Returns a value that indicates whether the current <see cref=\\\"T:System.ValueTuple`4\\\"/>\",\n    \"            instance is equal to a specified <see cref=\\\"T:System.ValueTuple`4\\\"/>.\",\n    \"            </summary>\",\n    \"            <param name=\\\"other\\\">The tuple to compare with this instance.</param>\",\n    \"            <returns><see langword=\\\"true\\\"/> if the current instance is equal to the specified tuple; otherwise, <see langword=\\\"false\\\"/>.</returns>\",\n    \"            <remarks>\",\n    \"            The <paramref name=\\\"other\\\"/> parameter is considered to be equal to the current instance if each of its fields\",\n    \"            are equal to that of the current instance, using the default comparer for that field's type.\",\n    \"            </remarks>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple`4.CompareTo(System.ValueTuple{`0,`1,`2,`3})\\\">\",\n    \"            <summary>Compares this instance to a specified instance and returns an indication of their relative values.</summary>\",\n    \"            <param name=\\\"other\\\">An instance to compare.</param>\",\n    \"            <returns>\",\n    \"            A signed number indicating the relative values of this instance and <paramref name=\\\"other\\\"/>.\",\n    \"            Returns less than zero if this instance is less than <paramref name=\\\"other\\\"/>, zero if this\",\n    \"            instance is equal to <paramref name=\\\"other\\\"/>, and greater than zero if this instance is greater \",\n    \"            than <paramref name=\\\"other\\\"/>.\",\n    \"            </returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple`4.GetHashCode\\\">\",\n    \"            <summary>\",\n    \"            Returns the hash code for the current <see cref=\\\"T:System.ValueTuple`4\\\"/> instance.\",\n    \"            </summary>\",\n    \"            <returns>A 32-bit signed integer hash code.</returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple`4.ToString\\\">\",\n    \"            <summary>\",\n    \"            Returns a string that represents the value of this <see cref=\\\"T:System.ValueTuple`4\\\"/> instance.\",\n    \"            </summary>\",\n    \"            <returns>The string representation of this <see cref=\\\"T:System.ValueTuple`4\\\"/> instance.</returns>\",\n    \"            <remarks>\",\n    \"            The string returned by this method takes the form <c>(Item1, Item2, Item3, Item4)</c>.\",\n    \"            If any field value is <see langword=\\\"null\\\"/>, it is represented as <see cref=\\\"F:System.String.Empty\\\"/>.\",\n    \"            </remarks>\",\n    \"        </member>\",\n    \"        <member name=\\\"T:System.ValueTuple`5\\\">\",\n    \"            <summary>\",\n    \"            Represents a 5-tuple, or quintuple, as a value type.\",\n    \"            </summary>\",\n    \"            <typeparam name=\\\"T1\\\">The type of the tuple's first component.</typeparam>\",\n    \"            <typeparam name=\\\"T2\\\">The type of the tuple's second component.</typeparam>\",\n    \"            <typeparam name=\\\"T3\\\">The type of the tuple's third component.</typeparam>\",\n    \"            <typeparam name=\\\"T4\\\">The type of the tuple's fourth component.</typeparam>\",\n    \"            <typeparam name=\\\"T5\\\">The type of the tuple's fifth component.</typeparam>\",\n    \"        </member>\",\n    \"        <member name=\\\"F:System.ValueTuple`5.Item1\\\">\",\n    \"            <summary>\",\n    \"            The current <see cref=\\\"T:System.ValueTuple`5\\\"/> instance's first component.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"F:System.ValueTuple`5.Item2\\\">\",\n    \"            <summary>\",\n    \"            The current <see cref=\\\"T:System.ValueTuple`5\\\"/> instance's second component.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"F:System.ValueTuple`5.Item3\\\">\",\n    \"            <summary>\",\n    \"            The current <see cref=\\\"T:System.ValueTuple`5\\\"/> instance's third component.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"F:System.ValueTuple`5.Item4\\\">\",\n    \"            <summary>\",\n    \"            The current <see cref=\\\"T:System.ValueTuple`5\\\"/> instance's fourth component.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"F:System.ValueTuple`5.Item5\\\">\",\n    \"            <summary>\",\n    \"            The current <see cref=\\\"T:System.ValueTuple`5\\\"/> instance's fifth component.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple`5.#ctor(`0,`1,`2,`3,`4)\\\">\",\n    \"            <summary>\",\n    \"            Initializes a new instance of the <see cref=\\\"T:System.ValueTuple`5\\\"/> value type.\",\n    \"            </summary>\",\n    \"            <param name=\\\"item1\\\">The value of the tuple's first component.</param>\",\n    \"            <param name=\\\"item2\\\">The value of the tuple's second component.</param>\",\n    \"            <param name=\\\"item3\\\">The value of the tuple's third component.</param>\",\n    \"            <param name=\\\"item4\\\">The value of the tuple's fourth component.</param>\",\n    \"            <param name=\\\"item5\\\">The value of the tuple's fifth component.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple`5.Equals(System.Object)\\\">\",\n    \"            <summary>\",\n    \"            Returns a value that indicates whether the current <see cref=\\\"T:System.ValueTuple`5\\\"/> instance is equal to a specified object.\",\n    \"            </summary>\",\n    \"            <param name=\\\"obj\\\">The object to compare with this instance.</param>\",\n    \"            <returns><see langword=\\\"true\\\"/> if the current instance is equal to the specified object; otherwise, <see langword=\\\"false\\\"/>.</returns>\",\n    \"            <remarks>\",\n    \"            The <paramref name=\\\"obj\\\"/> parameter is considered to be equal to the current instance under the following conditions:\",\n    \"            <list type=\\\"bullet\\\">\",\n    \"                <item><description>It is a <see cref=\\\"T:System.ValueTuple`5\\\"/> value type.</description></item>\",\n    \"                <item><description>Its components are of the same types as those of the current instance.</description></item>\",\n    \"                <item><description>Its components are equal to those of the current instance. Equality is determined by the default object equality comparer for each component.</description></item>\",\n    \"            </list>\",\n    \"            </remarks>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple`5.Equals(System.ValueTuple{`0,`1,`2,`3,`4})\\\">\",\n    \"            <summary>\",\n    \"            Returns a value that indicates whether the current <see cref=\\\"T:System.ValueTuple`5\\\"/>\",\n    \"            instance is equal to a specified <see cref=\\\"T:System.ValueTuple`5\\\"/>.\",\n    \"            </summary>\",\n    \"            <param name=\\\"other\\\">The tuple to compare with this instance.</param>\",\n    \"            <returns><see langword=\\\"true\\\"/> if the current instance is equal to the specified tuple; otherwise, <see langword=\\\"false\\\"/>.</returns>\",\n    \"            <remarks>\",\n    \"            The <paramref name=\\\"other\\\"/> parameter is considered to be equal to the current instance if each of its fields\",\n    \"            are equal to that of the current instance, using the default comparer for that field's type.\",\n    \"            </remarks>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple`5.CompareTo(System.ValueTuple{`0,`1,`2,`3,`4})\\\">\",\n    \"            <summary>Compares this instance to a specified instance and returns an indication of their relative values.</summary>\",\n    \"            <param name=\\\"other\\\">An instance to compare.</param>\",\n    \"            <returns>\",\n    \"            A signed number indicating the relative values of this instance and <paramref name=\\\"other\\\"/>.\",\n    \"            Returns less than zero if this instance is less than <paramref name=\\\"other\\\"/>, zero if this\",\n    \"            instance is equal to <paramref name=\\\"other\\\"/>, and greater than zero if this instance is greater \",\n    \"            than <paramref name=\\\"other\\\"/>.\",\n    \"            </returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple`5.GetHashCode\\\">\",\n    \"            <summary>\",\n    \"            Returns the hash code for the current <see cref=\\\"T:System.ValueTuple`5\\\"/> instance.\",\n    \"            </summary>\",\n    \"            <returns>A 32-bit signed integer hash code.</returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:System.ValueTuple`5.ToString\\\">\",\n    \"            <summary>\",\n    \"            Returns a string that represents the value of this <see cref=\\\"T:System.ValueTuple`5\\\"/> instance.\",\n    \"            </summary>\",\n    \"            <returns>The string representation of this <see cref=\\\"T:System.ValueTuple`5\\\"/> instance.</returns>\",\n    \"            <remarks>\",\n    \"            The string returned by this method takes the form <c>(Item1, Item2, Item3, Item4, Item5)</c>.\",\n    \"            If any field value is <see langword=\\\"null\\\"/>, it is represented as <see cref=\\\"F:System.String.Empty\\\"/>.\",\n    \"            </remarks>\",\n    \"        </member>\",\n    \"        <member name=\\\"T:System.ValueTuple`6\\\">\",\n    \"            <summary>\",\n    \"            Represents a 6-tuple, or sixtuple, as a value type.\",\n    \"            </summary>\",\n    \"            <typeparam name=\\\"T1\\\">The type of the tuple's first component.</typeparam>\",\n    \"            <typeparam name=\\\"T2\\\">The type of the tuple's second component.</typeparam>\",\n    \"            <typeparam name=\\\"T3\\\">The type of the tuple's third component.</typeparam>\",\n    \"            <typeparam name=\\\"T4\\\">The type of the tuple's fourth component.</typeparam>\",\n    \"            <typeparam name=\\\"T5\\\">The type of the tuple's fifth component.</typeparam>\",\n    \"            <typeparam name=\\\"T6\\\">The type of the tuple's sixth component.</typeparam>\",\n    \"        </member>\",\n    \"        <member name=\\\"F:System.ValueTuple`6.Item1\\\">\",\n    \"            <summary>\",\n    \"            The current <see cref=\\\"T:System.ValueTuple`6\\\"/> instance's first component.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"F:System.ValueTuple`6.Item2\\\">\",\n    \"            <summary>\",\n    \"            The current <see cref=\\\"T:System.ValueTuple`6\\\"/> instance's second component.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"F:System.ValueTuple`6.Item3\\\">\",\n    \"            <summary>\",\n    \"            The current <see cref=\\\"T:System.ValueTuple`6\\\"/> instance's third component.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"F:System.ValueTuple`6.Item4\\\">\",\n    \"            <summary>\",\n    \"            The current <see cref=\\\"T:System.ValueTuple`6\\\"/> instance's fourth component.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"F:System.ValueTuple`6.Item5\\\">\",\n    \"            <summary>\",\n    \"            The current <see cref=\\\"T:System.ValueTuple`6\\\"/> instance's fifth component.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"F:System.ValueTuple`6.Item6\\\">\",\n    \"            <summary>\"\n  ],\n  \"hex_dump\": null,\n  \"binary_info\": null,\n  \"signatures\": null,\n  \"symbols\": null,\n  \"control_flow\": null,\n  \"vulnerabilities\": null,\n  \"code_quality\": null,\n  \"dependencies\": null,\n  \"entropy\": null,\n  \"disassembly\": null,\n  \"threats\": null,\n  \"behavioral\": null,\n  \"yara_indicators\": null\n}"}]}}
