{"jsonrpc":"2.0","id":1,"result":{"content":[{"type":"text","text":"{\n  \"file_path\": \"/windows/Program Files (x86)/Steam/steamapps/common/EVGA PrecisionX/Newtonsoft.Json.xml\",\n  \"metadata\": {\n    \"file_path\": \"/windows/Program Files (x86)/Steam/steamapps/common/EVGA PrecisionX/Newtonsoft.Json.xml\",\n    \"file_name\": \"Newtonsoft.Json.xml\",\n    \"file_size\": 710224,\n    \"created\": \"2023-03-21T18:54:08.190465600Z\",\n    \"modified\": \"2023-03-21T18:54:08.190465600Z\",\n    \"accessed\": \"2025-05-30T11:23:18.668370800Z\",\n    \"permissions\": \"755\",\n    \"is_executable\": true,\n    \"mime_type\": \"application/octet-stream\",\n    \"hashes\": {\n      \"md5\": \"f414b3f68fe7c4f094b8fe8382f858c9\",\n      \"sha256\": \"2d46b37b086d6848af5f021d2d7a40581ce78aadd8ee39d309aee4771a0eeccf\",\n      \"sha512\": \"19b2feb40c2e9d4d20d9a21f88f6ecea773060c056b8cbbd21a6eec41486dc5fc101e6c31129b0d53466d04709bcd4ed777058ddfb02532242b43e253a7b24bd\",\n      \"blake3\": \"591fc43c0163d84219db779465450819bd2380230708ee94dee3b2882afa9fa4\"\n    },\n    \"binary_info\": null,\n    \"extracted_strings\": null,\n    \"signature_info\": null,\n    \"hex_dump\": null,\n    \"owner_uid\": 1000,\n    \"group_gid\": 1000\n  },\n  \"hashes\": {\n    \"md5\": \"f414b3f68fe7c4f094b8fe8382f858c9\",\n    \"sha256\": \"2d46b37b086d6848af5f021d2d7a40581ce78aadd8ee39d309aee4771a0eeccf\",\n    \"sha512\": \"19b2feb40c2e9d4d20d9a21f88f6ecea773060c056b8cbbd21a6eec41486dc5fc101e6c31129b0d53466d04709bcd4ed777058ddfb02532242b43e253a7b24bd\",\n    \"blake3\": \"591fc43c0163d84219db779465450819bd2380230708ee94dee3b2882afa9fa4\"\n  },\n  \"strings\": [\n    \"<?xml version=\\\"1.0\\\"?>\",\n    \"<doc>\",\n    \"    <assembly>\",\n    \"        <name>Newtonsoft.Json</name>\",\n    \"    </assembly>\",\n    \"    <members>\",\n    \"        <member name=\\\"T:Newtonsoft.Json.Bson.BsonObjectId\\\">\",\n    \"            <summary>\",\n    \"            Represents a BSON Oid (object id).\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"P:Newtonsoft.Json.Bson.BsonObjectId.Value\\\">\",\n    \"            <summary>\",\n    \"            Gets or sets the value of the Oid.\",\n    \"            </summary>\",\n    \"            <value>The value of the Oid.</value>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonObjectId.#ctor(System.Byte[])\\\">\",\n    \"            <summary>\",\n    \"            Initializes a new instance of the <see cref=\\\"T:Newtonsoft.Json.Bson.BsonObjectId\\\"/> class.\",\n    \"            </summary>\",\n    \"            <param name=\\\"value\\\">The Oid value.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"T:Newtonsoft.Json.Bson.BsonReader\\\">\",\n    \"            <summary>\",\n    \"            Represents a reader that provides fast, non-cached, forward-only access to serialized BSON data.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"P:Newtonsoft.Json.Bson.BsonReader.JsonNet35BinaryCompatibility\\\">\",\n    \"            <summary>\",\n    \"            Gets or sets a value indicating whether binary data reading should be compatible with incorrect Json.NET 3.5 written binary.\",\n    \"            </summary>\",\n    \"            <value>\",\n    \"            \",\n    \"<c>true</c> if binary data reading will be compatible with incorrect Json.NET 3.5 written binary; otherwise, <c>false</c>.\",\n    \"            </value>\",\n    \"        </member>\",\n    \"        <member name=\\\"P:Newtonsoft.Json.Bson.BsonReader.ReadRootValueAsArray\\\">\",\n    \"            <summary>\",\n    \"            Gets or sets a value indicating whether the root object will be read as a JSON array.\",\n    \"            </summary>\",\n    \"            <value>\",\n    \"            \",\n    \"<c>true</c> if the root object will be read as a JSON array; otherwise, <c>false</c>.\",\n    \"            </value>\",\n    \"        </member>\",\n    \"        <member name=\\\"P:Newtonsoft.Json.Bson.BsonReader.DateTimeKindHandling\\\">\",\n    \"            <summary>\",\n    \"            Gets or sets the <see cref=\\\"T:System.DateTimeKind\\\" /> used when reading <see cref=\\\"T:System.DateTime\\\"/> values from BSON.\",\n    \"            </summary>\",\n    \"            <value>The <see cref=\\\"T:System.DateTimeKind\\\" /> used when reading <see cref=\\\"T:System.DateTime\\\"/> values from BSON.</value>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonReader.#ctor(System.IO.Stream)\\\">\",\n    \"            <summary>\",\n    \"            Initializes a new instance of the <see cref=\\\"T:Newtonsoft.Json.Bson.BsonReader\\\"/> class.\",\n    \"            </summary>\",\n    \"            <param name=\\\"stream\\\">The <see cref=\\\"T:System.IO.Stream\\\"/> containing the BSON data to read.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonReader.#ctor(System.IO.BinaryReader)\\\">\",\n    \"            <summary>\",\n    \"            Initializes a new instance of the <see cref=\\\"T:Newtonsoft.Json.Bson.BsonReader\\\"/> class.\",\n    \"            </summary>\",\n    \"            <param name=\\\"reader\\\">The <see cref=\\\"T:System.IO.BinaryReader\\\"/> containing the BSON data to read.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonReader.#ctor(System.IO.Stream,System.Boolean,System.DateTimeKind)\\\">\",\n    \"            <summary>\",\n    \"            Initializes a new instance of the <see cref=\\\"T:Newtonsoft.Json.Bson.BsonReader\\\"/> class.\",\n    \"            </summary>\",\n    \"            <param name=\\\"stream\\\">The <see cref=\\\"T:System.IO.Stream\\\"/> containing the BSON data to read.</param>\",\n    \"            <param name=\\\"readRootValueAsArray\\\">if set to <c>true</c> the root object will be read as a JSON array.</param>\",\n    \"            <param name=\\\"dateTimeKindHandling\\\">The <see cref=\\\"T:System.DateTimeKind\\\" /> used when reading <see cref=\\\"T:System.DateTime\\\"/> values from BSON.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonReader.#ctor(System.IO.BinaryReader,System.Boolean,System.DateTimeKind)\\\">\",\n    \"            <summary>\",\n    \"            Initializes a new instance of the <see cref=\\\"T:Newtonsoft.Json.Bson.BsonReader\\\"/> class.\",\n    \"            </summary>\",\n    \"            <param name=\\\"reader\\\">The <see cref=\\\"T:System.IO.BinaryReader\\\"/> containing the BSON data to read.</param>\",\n    \"            <param name=\\\"readRootValueAsArray\\\">if set to <c>true</c> the root object will be read as a JSON array.</param>\",\n    \"            <param name=\\\"dateTimeKindHandling\\\">The <see cref=\\\"T:System.DateTimeKind\\\" /> used when reading <see cref=\\\"T:System.DateTime\\\"/> values from BSON.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonReader.Read\\\">\",\n    \"            <summary>\",\n    \"            Reads the next JSON token from the underlying <see cref=\\\"T:System.IO.Stream\\\"/>.\",\n    \"            </summary>\",\n    \"            <returns>\",\n    \"            <c>true</c> if the next token was read successfully; <c>false</c> if there are no more tokens to read.\",\n    \"            </returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonReader.Close\\\">\",\n    \"            <summary>\",\n    \"            Changes the reader's state to <see cref=\\\"F:Newtonsoft.Json.JsonReader.State.Closed\\\"/>.\",\n    \"            If <see cref=\\\"P:Newtonsoft.Json.JsonReader.CloseInput\\\"/> is set to <c>true</c>, the underlying <see cref=\\\"T:System.IO.Stream\\\"/> is also closed.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"T:Newtonsoft.Json.Bson.BsonWriter\\\">\",\n    \"            <summary>\",\n    \"            Represents a writer that provides a fast, non-cached, forward-only way of generating BSON data.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"P:Newtonsoft.Json.Bson.BsonWriter.DateTimeKindHandling\\\">\",\n    \"            <summary>\",\n    \"            Gets or sets the <see cref=\\\"T:System.DateTimeKind\\\" /> used when writing <see cref=\\\"T:System.DateTime\\\"/> values to BSON.\",\n    \"            When set to <see cref=\\\"F:System.DateTimeKind.Unspecified\\\" /> no conversion will occur.\",\n    \"            </summary>\",\n    \"            <value>The <see cref=\\\"T:System.DateTimeKind\\\" /> used when writing <see cref=\\\"T:System.DateTime\\\"/> values to BSON.</value>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonWriter.#ctor(System.IO.Stream)\\\">\",\n    \"            <summary>\",\n    \"            Initializes a new instance of the <see cref=\\\"T:Newtonsoft.Json.Bson.BsonWriter\\\"/> class.\",\n    \"            </summary>\",\n    \"            <param name=\\\"stream\\\">The <see cref=\\\"T:System.IO.Stream\\\"/> to write to.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonWriter.#ctor(System.IO.BinaryWriter)\\\">\",\n    \"            <summary>\",\n    \"            Initializes a new instance of the <see cref=\\\"T:Newtonsoft.Json.Bson.BsonWriter\\\"/> class.\",\n    \"            </summary>\",\n    \"            <param name=\\\"writer\\\">The <see cref=\\\"T:System.IO.BinaryWriter\\\"/> to write to.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonWriter.Flush\\\">\",\n    \"            <summary>\",\n    \"            Flushes whatever is in the buffer to the underlying <see cref=\\\"T:System.IO.Stream\\\"/> and also flushes the underlying stream.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonWriter.WriteEnd(Newtonsoft.Json.JsonToken)\\\">\",\n    \"            <summary>\",\n    \"            Writes the end.\",\n    \"            </summary>\",\n    \"            <param name=\\\"token\\\">The token.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonWriter.WriteComment(System.String)\\\">\",\n    \"            <summary>\",\n    \"            Writes a comment <c>/*...*/</c> containing the specified text.\",\n    \"            </summary>\",\n    \"            <param name=\\\"text\\\">Text to place inside the comment.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonWriter.WriteStartConstructor(System.String)\\\">\",\n    \"            <summary>\",\n    \"            Writes the start of a constructor with the given name.\",\n    \"            </summary>\",\n    \"            <param name=\\\"name\\\">The name of the constructor.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonWriter.WriteRaw(System.String)\\\">\",\n    \"            <summary>\",\n    \"            Writes raw JSON.\",\n    \"            </summary>\",\n    \"            <param name=\\\"json\\\">The raw JSON to write.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonWriter.WriteRawValue(System.String)\\\">\",\n    \"            <summary>\",\n    \"            Writes raw JSON where a value is expected and updates the writer's state.\",\n    \"            </summary>\",\n    \"            <param name=\\\"json\\\">The raw JSON to write.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonWriter.WriteStartArray\\\">\",\n    \"            <summary>\",\n    \"            Writes the beginning of a JSON array.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonWriter.WriteStartObject\\\">\",\n    \"            <summary>\",\n    \"            Writes the beginning of a JSON object.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonWriter.WritePropertyName(System.String)\\\">\",\n    \"            <summary>\",\n    \"            Writes the property name of a name/value pair on a JSON object.\",\n    \"            </summary>\",\n    \"            <param name=\\\"name\\\">The name of the property.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonWriter.Close\\\">\",\n    \"            <summary>\",\n    \"            Closes this writer.\",\n    \"            If <see cref=\\\"P:Newtonsoft.Json.JsonWriter.CloseOutput\\\"/> is set to <c>true</c>, the underlying <see cref=\\\"T:System.IO.Stream\\\"/> is also closed.\",\n    \"            If <see cref=\\\"P:Newtonsoft.Json.JsonWriter.AutoCompleteOnClose\\\"/> is set to <c>true</c>, the JSON is auto-completed.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.Object)\\\">\",\n    \"            <summary>\",\n    \"            Writes a <see cref=\\\"T:System.Object\\\"/> value.\",\n    \"            An error will raised if the value cannot be written as a single JSON token.\",\n    \"            </summary>\",\n    \"            <param name=\\\"value\\\">The <see cref=\\\"T:System.Object\\\"/> value to write.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonWriter.WriteNull\\\">\",\n    \"            <summary>\",\n    \"            Writes a null value.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonWriter.WriteUndefined\\\">\",\n    \"            <summary>\",\n    \"            Writes an undefined value.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.String)\\\">\",\n    \"            <summary>\",\n    \"            Writes a <see cref=\\\"T:System.String\\\"/> value.\",\n    \"            </summary>\",\n    \"            <param name=\\\"value\\\">The <see cref=\\\"T:System.String\\\"/> value to write.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.Int32)\\\">\",\n    \"            <summary>\",\n    \"            Writes a <see cref=\\\"T:System.Int32\\\"/> value.\",\n    \"            </summary>\",\n    \"            <param name=\\\"value\\\">The <see cref=\\\"T:System.Int32\\\"/> value to write.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.UInt32)\\\">\",\n    \"            <summary>\",\n    \"            Writes a <see cref=\\\"T:System.UInt32\\\"/> value.\",\n    \"            </summary>\",\n    \"            <param name=\\\"value\\\">The <see cref=\\\"T:System.UInt32\\\"/> value to write.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.Int64)\\\">\",\n    \"            <summary>\",\n    \"            Writes a <see cref=\\\"T:System.Int64\\\"/> value.\",\n    \"            </summary>\",\n    \"            <param name=\\\"value\\\">The <see cref=\\\"T:System.Int64\\\"/> value to write.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.UInt64)\\\">\",\n    \"            <summary>\",\n    \"            Writes a <see cref=\\\"T:System.UInt64\\\"/> value.\",\n    \"            </summary>\",\n    \"            <param name=\\\"value\\\">The <see cref=\\\"T:System.UInt64\\\"/> value to write.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.Single)\\\">\",\n    \"            <summary>\",\n    \"            Writes a <see cref=\\\"T:System.Single\\\"/> value.\",\n    \"            </summary>\",\n    \"            <param name=\\\"value\\\">The <see cref=\\\"T:System.Single\\\"/> value to write.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.Double)\\\">\",\n    \"            <summary>\",\n    \"            Writes a <see cref=\\\"T:System.Double\\\"/> value.\",\n    \"            </summary>\",\n    \"            <param name=\\\"value\\\">The <see cref=\\\"T:System.Double\\\"/> value to write.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.Boolean)\\\">\",\n    \"            <summary>\",\n    \"            Writes a <see cref=\\\"T:System.Boolean\\\"/> value.\",\n    \"            </summary>\",\n    \"            <param name=\\\"value\\\">The <see cref=\\\"T:System.Boolean\\\"/> value to write.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.Int16)\\\">\",\n    \"            <summary>\",\n    \"            Writes a <see cref=\\\"T:System.Int16\\\"/> value.\",\n    \"            </summary>\",\n    \"            <param name=\\\"value\\\">The <see cref=\\\"T:System.Int16\\\"/> value to write.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.UInt16)\\\">\",\n    \"            <summary>\",\n    \"            Writes a <see cref=\\\"T:System.UInt16\\\"/> value.\",\n    \"            </summary>\",\n    \"            <param name=\\\"value\\\">The <see cref=\\\"T:System.UInt16\\\"/> value to write.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.Char)\\\">\",\n    \"            <summary>\",\n    \"            Writes a <see cref=\\\"T:System.Char\\\"/> value.\",\n    \"            </summary>\",\n    \"            <param name=\\\"value\\\">The <see cref=\\\"T:System.Char\\\"/> value to write.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.Byte)\\\">\",\n    \"            <summary>\",\n    \"            Writes a <see cref=\\\"T:System.Byte\\\"/> value.\",\n    \"            </summary>\",\n    \"            <param name=\\\"value\\\">The <see cref=\\\"T:System.Byte\\\"/> value to write.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.SByte)\\\">\",\n    \"            <summary>\",\n    \"            Writes a <see cref=\\\"T:System.SByte\\\"/> value.\",\n    \"            </summary>\",\n    \"            <param name=\\\"value\\\">The <see cref=\\\"T:System.SByte\\\"/> value to write.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.Decimal)\\\">\",\n    \"            <summary>\",\n    \"            Writes a <see cref=\\\"T:System.Decimal\\\"/> value.\",\n    \"            </summary>\",\n    \"            <param name=\\\"value\\\">The <see cref=\\\"T:System.Decimal\\\"/> value to write.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.DateTime)\\\">\",\n    \"            <summary>\",\n    \"            Writes a <see cref=\\\"T:System.DateTime\\\"/> value.\",\n    \"            </summary>\",\n    \"            <param name=\\\"value\\\">The <see cref=\\\"T:System.DateTime\\\"/> value to write.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.DateTimeOffset)\\\">\",\n    \"            <summary>\",\n    \"            Writes a <see cref=\\\"T:System.DateTimeOffset\\\"/> value.\",\n    \"            </summary>\",\n    \"            <param name=\\\"value\\\">The <see cref=\\\"T:System.DateTimeOffset\\\"/> value to write.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.Byte[])\\\">\",\n    \"            <summary>\",\n    \"            Writes a <see cref=\\\"T:System.Byte\\\"/>[] value.\",\n    \"            </summary>\",\n    \"            <param name=\\\"value\\\">The <see cref=\\\"T:System.Byte\\\"/>[] value to write.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.Guid)\\\">\",\n    \"            <summary>\",\n    \"            Writes a <see cref=\\\"T:System.Guid\\\"/> value.\",\n    \"            </summary>\",\n    \"            <param name=\\\"value\\\">The <see cref=\\\"T:System.Guid\\\"/> value to write.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.TimeSpan)\\\">\",\n    \"            <summary>\",\n    \"            Writes a <see cref=\\\"T:System.TimeSpan\\\"/> value.\",\n    \"            </summary>\",\n    \"            <param name=\\\"value\\\">The <see cref=\\\"T:System.TimeSpan\\\"/> value to write.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.Uri)\\\">\",\n    \"            <summary>\",\n    \"            Writes a <see cref=\\\"T:System.Uri\\\"/> value.\",\n    \"            </summary>\",\n    \"            <param name=\\\"value\\\">The <see cref=\\\"T:System.Uri\\\"/> value to write.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonWriter.WriteObjectId(System.Byte[])\\\">\",\n    \"            <summary>\",\n    \"            Writes a <see cref=\\\"T:System.Byte\\\"/>[] value that represents a BSON object id.\",\n    \"            </summary>\",\n    \"            <param name=\\\"value\\\">The Object ID value to write.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Bson.BsonWriter.WriteRegex(System.String,System.String)\\\">\",\n    \"            <summary>\",\n    \"            Writes a BSON regex.\",\n    \"            </summary>\",\n    \"            <param name=\\\"pattern\\\">The regex pattern.</param>\",\n    \"            <param name=\\\"options\\\">The regex options.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"T:Newtonsoft.Json.ConstructorHandling\\\">\",\n    \"            <summary>\",\n    \"            Specifies how constructors are used when initializing objects during deserialization by the <see cref=\\\"T:Newtonsoft.Json.JsonSerializer\\\"/>.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"F:Newtonsoft.Json.ConstructorHandling.Default\\\">\",\n    \"            <summary>\",\n    \"            First attempt to use the public default constructor, then fall back to a single parameterized constructor, then to the non-public default constructor.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"F:Newtonsoft.Json.ConstructorHandling.AllowNonPublicDefaultConstructor\\\">\",\n    \"            <summary>\",\n    \"            Json.NET will use a non-public default constructor before falling back to a parameterized constructor.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"T:Newtonsoft.Json.Converters.BinaryConverter\\\">\",\n    \"            <summary>\",\n    \"            Converts a binary value to and from a base 64 string value.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.BinaryConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)\\\">\",\n    \"            <summary>\",\n    \"            Writes the JSON representation of the object.\",\n    \"            </summary>\",\n    \"            <param name=\\\"writer\\\">The <see cref=\\\"T:Newtonsoft.Json.JsonWriter\\\"/> to write to.</param>\",\n    \"            <param name=\\\"value\\\">The value.</param>\",\n    \"            <param name=\\\"serializer\\\">The calling serializer.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.BinaryConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)\\\">\",\n    \"            <summary>\",\n    \"            Reads the JSON representation of the object.\",\n    \"            </summary>\",\n    \"            <param name=\\\"reader\\\">The <see cref=\\\"T:Newtonsoft.Json.JsonReader\\\"/> to read from.</param>\",\n    \"            <param name=\\\"objectType\\\">Type of the object.</param>\",\n    \"            <param name=\\\"existingValue\\\">The existing value of object being read.</param>\",\n    \"            <param name=\\\"serializer\\\">The calling serializer.</param>\",\n    \"            <returns>The object value.</returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.BinaryConverter.CanConvert(System.Type)\\\">\",\n    \"            <summary>\",\n    \"            Determines whether this instance can convert the specified object type.\",\n    \"            </summary>\",\n    \"            <param name=\\\"objectType\\\">Type of the object.</param>\",\n    \"            <returns>\",\n    \"            \",\n    \"<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.\",\n    \"            </returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"T:Newtonsoft.Json.Converters.BsonObjectIdConverter\\\">\",\n    \"            <summary>\",\n    \"            Converts a <see cref=\\\"T:Newtonsoft.Json.Bson.BsonObjectId\\\"/> to and from JSON and BSON.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.BsonObjectIdConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)\\\">\",\n    \"            <summary>\",\n    \"            Writes the JSON representation of the object.\",\n    \"            </summary>\",\n    \"            <param name=\\\"writer\\\">The <see cref=\\\"T:Newtonsoft.Json.JsonWriter\\\"/> to write to.</param>\",\n    \"            <param name=\\\"value\\\">The value.</param>\",\n    \"            <param name=\\\"serializer\\\">The calling serializer.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.BsonObjectIdConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)\\\">\",\n    \"            <summary>\",\n    \"            Reads the JSON representation of the object.\",\n    \"            </summary>\",\n    \"            <param name=\\\"reader\\\">The <see cref=\\\"T:Newtonsoft.Json.JsonReader\\\"/> to read from.</param>\",\n    \"            <param name=\\\"objectType\\\">Type of the object.</param>\",\n    \"            <param name=\\\"existingValue\\\">The existing value of object being read.</param>\",\n    \"            <param name=\\\"serializer\\\">The calling serializer.</param>\",\n    \"            <returns>The object value.</returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.BsonObjectIdConverter.CanConvert(System.Type)\\\">\",\n    \"            <summary>\",\n    \"            Determines whether this instance can convert the specified object type.\",\n    \"            </summary>\",\n    \"            <param name=\\\"objectType\\\">Type of the object.</param>\",\n    \"            <returns>\",\n    \"            \",\n    \"<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.\",\n    \"            </returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"T:Newtonsoft.Json.Converters.CustomCreationConverter`1\\\">\",\n    \"            <summary>\",\n    \"            Creates a custom object.\",\n    \"            </summary>\",\n    \"            <typeparam name=\\\"T\\\">The object type to convert.</typeparam>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.CustomCreationConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)\\\">\",\n    \"            <summary>\",\n    \"            Writes the JSON representation of the object.\",\n    \"            </summary>\",\n    \"            <param name=\\\"writer\\\">The <see cref=\\\"T:Newtonsoft.Json.JsonWriter\\\"/> to write to.</param>\",\n    \"            <param name=\\\"value\\\">The value.</param>\",\n    \"            <param name=\\\"serializer\\\">The calling serializer.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.CustomCreationConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)\\\">\",\n    \"            <summary>\",\n    \"            Reads the JSON representation of the object.\",\n    \"            </summary>\",\n    \"            <param name=\\\"reader\\\">The <see cref=\\\"T:Newtonsoft.Json.JsonReader\\\"/> to read from.</param>\",\n    \"            <param name=\\\"objectType\\\">Type of the object.</param>\",\n    \"            <param name=\\\"existingValue\\\">The existing value of object being read.</param>\",\n    \"            <param name=\\\"serializer\\\">The calling serializer.</param>\",\n    \"            <returns>The object value.</returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.CustomCreationConverter`1.Create(System.Type)\\\">\",\n    \"            <summary>\",\n    \"            Creates an object which will then be populated by the serializer.\",\n    \"            </summary>\",\n    \"            <param name=\\\"objectType\\\">Type of the object.</param>\",\n    \"            <returns>The created object.</returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.CustomCreationConverter`1.CanConvert(System.Type)\\\">\",\n    \"            <summary>\",\n    \"            Determines whether this instance can convert the specified object type.\",\n    \"            </summary>\",\n    \"            <param name=\\\"objectType\\\">Type of the object.</param>\",\n    \"            <returns>\",\n    \"            \",\n    \"<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.\",\n    \"            </returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"P:Newtonsoft.Json.Converters.CustomCreationConverter`1.CanWrite\\\">\",\n    \"            <summary>\",\n    \"            Gets a value indicating whether this <see cref=\\\"T:Newtonsoft.Json.JsonConverter\\\"/> can write JSON.\",\n    \"            </summary>\",\n    \"            <value>\",\n    \"            \",\n    \"<c>true</c> if this <see cref=\\\"T:Newtonsoft.Json.JsonConverter\\\"/> can write JSON; otherwise, <c>false</c>.\",\n    \"            </value>\",\n    \"        </member>\",\n    \"        <member name=\\\"T:Newtonsoft.Json.Converters.DataSetConverter\\\">\",\n    \"            <summary>\",\n    \"            Converts a <see cref=\\\"T:System.Data.DataSet\\\"/> to and from JSON.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.DataSetConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)\\\">\",\n    \"            <summary>\",\n    \"            Writes the JSON representation of the object.\",\n    \"            </summary>\",\n    \"            <param name=\\\"writer\\\">The <see cref=\\\"T:Newtonsoft.Json.JsonWriter\\\"/> to write to.</param>\",\n    \"            <param name=\\\"value\\\">The value.</param>\",\n    \"            <param name=\\\"serializer\\\">The calling serializer.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)\\\">\",\n    \"            <summary>\",\n    \"            Reads the JSON representation of the object.\",\n    \"            </summary>\",\n    \"            <param name=\\\"reader\\\">The <see cref=\\\"T:Newtonsoft.Json.JsonReader\\\"/> to read from.</param>\",\n    \"            <param name=\\\"objectType\\\">Type of the object.</param>\",\n    \"            <param name=\\\"existingValue\\\">The existing value of object being read.</param>\",\n    \"            <param name=\\\"serializer\\\">The calling serializer.</param>\",\n    \"            <returns>The object value.</returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.DataSetConverter.CanConvert(System.Type)\\\">\",\n    \"            <summary>\",\n    \"            Determines whether this instance can convert the specified value type.\",\n    \"            </summary>\",\n    \"            <param name=\\\"valueType\\\">Type of the value.</param>\",\n    \"            <returns>\",\n    \"            \",\n    \"<c>true</c> if this instance can convert the specified value type; otherwise, <c>false</c>.\",\n    \"            </returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"T:Newtonsoft.Json.Converters.DataTableConverter\\\">\",\n    \"            <summary>\",\n    \"            Converts a <see cref=\\\"T:System.Data.DataTable\\\"/> to and from JSON.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.DataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)\\\">\",\n    \"            <summary>\",\n    \"            Writes the JSON representation of the object.\",\n    \"            </summary>\",\n    \"            <param name=\\\"writer\\\">The <see cref=\\\"T:Newtonsoft.Json.JsonWriter\\\"/> to write to.</param>\",\n    \"            <param name=\\\"value\\\">The value.</param>\",\n    \"            <param name=\\\"serializer\\\">The calling serializer.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)\\\">\",\n    \"            <summary>\",\n    \"            Reads the JSON representation of the object.\",\n    \"            </summary>\",\n    \"            <param name=\\\"reader\\\">The <see cref=\\\"T:Newtonsoft.Json.JsonReader\\\"/> to read from.</param>\",\n    \"            <param name=\\\"objectType\\\">Type of the object.</param>\",\n    \"            <param name=\\\"existingValue\\\">The existing value of object being read.</param>\",\n    \"            <param name=\\\"serializer\\\">The calling serializer.</param>\",\n    \"            <returns>The object value.</returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.DataTableConverter.CanConvert(System.Type)\\\">\",\n    \"            <summary>\",\n    \"            Determines whether this instance can convert the specified value type.\",\n    \"            </summary>\",\n    \"            <param name=\\\"valueType\\\">Type of the value.</param>\",\n    \"            <returns>\",\n    \"            \",\n    \"<c>true</c> if this instance can convert the specified value type; otherwise, <c>false</c>.\",\n    \"            </returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"T:Newtonsoft.Json.Converters.DateTimeConverterBase\\\">\",\n    \"            <summary>\",\n    \"            Provides a base class for converting a <see cref=\\\"T:System.DateTime\\\"/> to and from JSON.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.DateTimeConverterBase.CanConvert(System.Type)\\\">\",\n    \"            <summary>\",\n    \"            Determines whether this instance can convert the specified object type.\",\n    \"            </summary>\",\n    \"            <param name=\\\"objectType\\\">Type of the object.</param>\",\n    \"            <returns>\",\n    \"            \",\n    \"<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.\",\n    \"            </returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"T:Newtonsoft.Json.Converters.DiscriminatedUnionConverter\\\">\",\n    \"            <summary>\",\n    \"            Converts a F# discriminated union type to and from JSON.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)\\\">\",\n    \"            <summary>\",\n    \"            Writes the JSON representation of the object.\",\n    \"            </summary>\",\n    \"            <param name=\\\"writer\\\">The <see cref=\\\"T:Newtonsoft.Json.JsonWriter\\\"/> to write to.</param>\",\n    \"            <param name=\\\"value\\\">The value.</param>\",\n    \"            <param name=\\\"serializer\\\">The calling serializer.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)\\\">\",\n    \"            <summary>\",\n    \"            Reads the JSON representation of the object.\",\n    \"            </summary>\",\n    \"            <param name=\\\"reader\\\">The <see cref=\\\"T:Newtonsoft.Json.JsonReader\\\"/> to read from.</param>\",\n    \"            <param name=\\\"objectType\\\">Type of the object.</param>\",\n    \"            <param name=\\\"existingValue\\\">The existing value of object being read.</param>\",\n    \"            <param name=\\\"serializer\\\">The calling serializer.</param>\",\n    \"            <returns>The object value.</returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)\\\">\",\n    \"            <summary>\",\n    \"            Determines whether this instance can convert the specified object type.\",\n    \"            </summary>\",\n    \"            <param name=\\\"objectType\\\">Type of the object.</param>\",\n    \"            <returns>\",\n    \"            \",\n    \"<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.\",\n    \"            </returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"T:Newtonsoft.Json.Converters.EntityKeyMemberConverter\\\">\",\n    \"            <summary>\",\n    \"            Converts an Entity Framework <see cref=\\\"T:System.Data.EntityKeyMember\\\"/> to and from JSON.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.EntityKeyMemberConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)\\\">\",\n    \"            <summary>\",\n    \"            Writes the JSON representation of the object.\",\n    \"            </summary>\",\n    \"            <param name=\\\"writer\\\">The <see cref=\\\"T:Newtonsoft.Json.JsonWriter\\\"/> to write to.</param>\",\n    \"            <param name=\\\"value\\\">The value.</param>\",\n    \"            <param name=\\\"serializer\\\">The calling serializer.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.EntityKeyMemberConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)\\\">\",\n    \"            <summary>\",\n    \"            Reads the JSON representation of the object.\",\n    \"            </summary>\",\n    \"            <param name=\\\"reader\\\">The <see cref=\\\"T:Newtonsoft.Json.JsonReader\\\"/> to read from.</param>\",\n    \"            <param name=\\\"objectType\\\">Type of the object.</param>\",\n    \"            <param name=\\\"existingValue\\\">The existing value of object being read.</param>\",\n    \"            <param name=\\\"serializer\\\">The calling serializer.</param>\",\n    \"            <returns>The object value.</returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.EntityKeyMemberConverter.CanConvert(System.Type)\\\">\",\n    \"            <summary>\",\n    \"            Determines whether this instance can convert the specified object type.\",\n    \"            </summary>\",\n    \"            <param name=\\\"objectType\\\">Type of the object.</param>\",\n    \"            <returns>\",\n    \"            \",\n    \"<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.\",\n    \"            </returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"T:Newtonsoft.Json.Converters.ExpandoObjectConverter\\\">\",\n    \"            <summary>\",\n    \"            Converts an <see cref=\\\"T:System.Dynamic.ExpandoObject\\\"/> to and from JSON.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.ExpandoObjectConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)\\\">\",\n    \"            <summary>\",\n    \"            Writes the JSON representation of the object.\",\n    \"            </summary>\",\n    \"            <param name=\\\"writer\\\">The <see cref=\\\"T:Newtonsoft.Json.JsonWriter\\\"/> to write to.</param>\",\n    \"            <param name=\\\"value\\\">The value.</param>\",\n    \"            <param name=\\\"serializer\\\">The calling serializer.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.ExpandoObjectConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)\\\">\",\n    \"            <summary>\",\n    \"            Reads the JSON representation of the object.\",\n    \"            </summary>\",\n    \"            <param name=\\\"reader\\\">The <see cref=\\\"T:Newtonsoft.Json.JsonReader\\\"/> to read from.</param>\",\n    \"            <param name=\\\"objectType\\\">Type of the object.</param>\",\n    \"            <param name=\\\"existingValue\\\">The existing value of object being read.</param>\",\n    \"            <param name=\\\"serializer\\\">The calling serializer.</param>\",\n    \"            <returns>The object value.</returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.ExpandoObjectConverter.CanConvert(System.Type)\\\">\",\n    \"            <summary>\",\n    \"            Determines whether this instance can convert the specified object type.\",\n    \"            </summary>\",\n    \"            <param name=\\\"objectType\\\">Type of the object.</param>\",\n    \"            <returns>\",\n    \"            \",\n    \"<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.\",\n    \"            </returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"P:Newtonsoft.Json.Converters.ExpandoObjectConverter.CanWrite\\\">\",\n    \"            <summary>\",\n    \"            Gets a value indicating whether this <see cref=\\\"T:Newtonsoft.Json.JsonConverter\\\"/> can write JSON.\",\n    \"            </summary>\",\n    \"            <value>\",\n    \"            \",\n    \"<c>true</c> if this <see cref=\\\"T:Newtonsoft.Json.JsonConverter\\\"/> can write JSON; otherwise, <c>false</c>.\",\n    \"            </value>\",\n    \"        </member>\",\n    \"        <member name=\\\"T:Newtonsoft.Json.Converters.IsoDateTimeConverter\\\">\",\n    \"            <summary>\",\n    \"            Converts a <see cref=\\\"T:System.DateTime\\\"/> to and from the ISO 8601 date format (e.g. <c>\\\"2008-04-12T12:53Z\\\"</c>).\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"P:Newtonsoft.Json.Converters.IsoDateTimeConverter.DateTimeStyles\\\">\",\n    \"            <summary>\",\n    \"            Gets or sets the date time styles used when converting a date to and from JSON.\",\n    \"            </summary>\",\n    \"            <value>The date time styles used when converting a date to and from JSON.</value>\",\n    \"        </member>\",\n    \"        <member name=\\\"P:Newtonsoft.Json.Converters.IsoDateTimeConverter.DateTimeFormat\\\">\",\n    \"            <summary>\",\n    \"            Gets or sets the date time format used when converting a date to and from JSON.\",\n    \"            </summary>\",\n    \"            <value>The date time format used when converting a date to and from JSON.</value>\",\n    \"        </member>\",\n    \"        <member name=\\\"P:Newtonsoft.Json.Converters.IsoDateTimeConverter.Culture\\\">\",\n    \"            <summary>\",\n    \"            Gets or sets the culture used when converting a date to and from JSON.\",\n    \"            </summary>\",\n    \"            <value>The culture used when converting a date to and from JSON.</value>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)\\\">\",\n    \"            <summary>\",\n    \"            Writes the JSON representation of the object.\",\n    \"            </summary>\",\n    \"            <param name=\\\"writer\\\">The <see cref=\\\"T:Newtonsoft.Json.JsonWriter\\\"/> to write to.</param>\",\n    \"            <param name=\\\"value\\\">The value.</param>\",\n    \"            <param name=\\\"serializer\\\">The calling serializer.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)\\\">\",\n    \"            <summary>\",\n    \"            Reads the JSON representation of the object.\",\n    \"            </summary>\",\n    \"            <param name=\\\"reader\\\">The <see cref=\\\"T:Newtonsoft.Json.JsonReader\\\"/> to read from.</param>\",\n    \"            <param name=\\\"objectType\\\">Type of the object.</param>\",\n    \"            <param name=\\\"existingValue\\\">The existing value of object being read.</param>\",\n    \"            <param name=\\\"serializer\\\">The calling serializer.</param>\",\n    \"            <returns>The object value.</returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"T:Newtonsoft.Json.Converters.JavaScriptDateTimeConverter\\\">\",\n    \"            <summary>\",\n    \"            Converts a <see cref=\\\"T:System.DateTime\\\"/> to and from a JavaScript <c>Date</c> constructor (e.g. <c>new Date(52231943)</c>).\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)\\\">\",\n    \"            <summary>\",\n    \"            Writes the JSON representation of the object.\",\n    \"            </summary>\",\n    \"            <param name=\\\"writer\\\">The <see cref=\\\"T:Newtonsoft.Json.JsonWriter\\\"/> to write to.</param>\",\n    \"            <param name=\\\"value\\\">The value.</param>\",\n    \"            <param name=\\\"serializer\\\">The calling serializer.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)\\\">\",\n    \"            <summary>\",\n    \"            Reads the JSON representation of the object.\",\n    \"            </summary>\",\n    \"            <param name=\\\"reader\\\">The <see cref=\\\"T:Newtonsoft.Json.JsonReader\\\"/> to read from.</param>\",\n    \"            <param name=\\\"objectType\\\">Type of the object.</param>\",\n    \"            <param name=\\\"existingValue\\\">The existing property value of the JSON that is being converted.</param>\",\n    \"            <param name=\\\"serializer\\\">The calling serializer.</param>\",\n    \"            <returns>The object value.</returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"T:Newtonsoft.Json.Converters.KeyValuePairConverter\\\">\",\n    \"            <summary>\",\n    \"            Converts a <see cref=\\\"T:System.Collections.Generic.KeyValuePair`2\\\"/> to and from JSON.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.KeyValuePairConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)\\\">\",\n    \"            <summary>\",\n    \"            Writes the JSON representation of the object.\",\n    \"            </summary>\",\n    \"            <param name=\\\"writer\\\">The <see cref=\\\"T:Newtonsoft.Json.JsonWriter\\\"/> to write to.</param>\",\n    \"            <param name=\\\"value\\\">The value.</param>\",\n    \"            <param name=\\\"serializer\\\">The calling serializer.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.KeyValuePairConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)\\\">\",\n    \"            <summary>\",\n    \"            Reads the JSON representation of the object.\",\n    \"            </summary>\",\n    \"            <param name=\\\"reader\\\">The <see cref=\\\"T:Newtonsoft.Json.JsonReader\\\"/> to read from.</param>\",\n    \"            <param name=\\\"objectType\\\">Type of the object.</param>\",\n    \"            <param name=\\\"existingValue\\\">The existing value of object being read.</param>\",\n    \"            <param name=\\\"serializer\\\">The calling serializer.</param>\",\n    \"            <returns>The object value.</returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.KeyValuePairConverter.CanConvert(System.Type)\\\">\",\n    \"            <summary>\",\n    \"            Determines whether this instance can convert the specified object type.\",\n    \"            </summary>\",\n    \"            <param name=\\\"objectType\\\">Type of the object.</param>\",\n    \"            <returns>\",\n    \"            \",\n    \"<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.\",\n    \"            </returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"T:Newtonsoft.Json.Converters.RegexConverter\\\">\",\n    \"            <summary>\",\n    \"            Converts a <see cref=\\\"T:System.Text.RegularExpressions.Regex\\\"/> to and from JSON and BSON.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)\\\">\",\n    \"            <summary>\",\n    \"            Writes the JSON representation of the object.\",\n    \"            </summary>\",\n    \"            <param name=\\\"writer\\\">The <see cref=\\\"T:Newtonsoft.Json.JsonWriter\\\"/> to write to.</param>\",\n    \"            <param name=\\\"value\\\">The value.</param>\",\n    \"            <param name=\\\"serializer\\\">The calling serializer.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.RegexConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)\\\">\",\n    \"            <summary>\",\n    \"            Reads the JSON representation of the object.\",\n    \"            </summary>\",\n    \"            <param name=\\\"reader\\\">The <see cref=\\\"T:Newtonsoft.Json.JsonReader\\\"/> to read from.</param>\",\n    \"            <param name=\\\"objectType\\\">Type of the object.</param>\",\n    \"            <param name=\\\"existingValue\\\">The existing value of object being read.</param>\",\n    \"            <param name=\\\"serializer\\\">The calling serializer.</param>\",\n    \"            <returns>The object value.</returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.RegexConverter.CanConvert(System.Type)\\\">\",\n    \"            <summary>\",\n    \"            Determines whether this instance can convert the specified object type.\",\n    \"            </summary>\",\n    \"            <param name=\\\"objectType\\\">Type of the object.</param>\",\n    \"            <returns>\",\n    \"            \",\n    \"<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.\",\n    \"            </returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"T:Newtonsoft.Json.Converters.StringEnumConverter\\\">\",\n    \"            <summary>\",\n    \"            Converts an <see cref=\\\"T:System.Enum\\\"/> to and from its name string value.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"P:Newtonsoft.Json.Converters.StringEnumConverter.CamelCaseText\\\">\",\n    \"            <summary>\",\n    \"            Gets or sets a value indicating whether the written enum text should be camel case.\",\n    \"            The default value is <c>false</c>.\",\n    \"            </summary>\",\n    \"            <value><c>true</c> if the written enum text will be camel case; otherwise, <c>false</c>.</value>\",\n    \"        </member>\",\n    \"        <member name=\\\"P:Newtonsoft.Json.Converters.StringEnumConverter.NamingStrategy\\\">\",\n    \"            <summary>\",\n    \"            Gets or sets the naming strategy used to resolve how enum text is written.\",\n    \"            </summary>\",\n    \"            <value>The naming strategy used to resolve how enum text is written.</value>\",\n    \"        </member>\",\n    \"        <member name=\\\"P:Newtonsoft.Json.Converters.StringEnumConverter.AllowIntegerValues\\\">\",\n    \"            <summary>\",\n    \"            Gets or sets a value indicating whether integer values are allowed when serializing and deserializing.\",\n    \"            The default value is <c>true</c>.\",\n    \"            </summary>\",\n    \"            <value><c>true</c> if integers are allowed when serializing and deserializing; otherwise, <c>false</c>.</value>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.StringEnumConverter.#ctor\\\">\",\n    \"            <summary>\",\n    \"            Initializes a new instance of the <see cref=\\\"T:Newtonsoft.Json.Converters.StringEnumConverter\\\"/> class.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.StringEnumConverter.#ctor(System.Boolean)\\\">\",\n    \"            <summary>\",\n    \"            Initializes a new instance of the <see cref=\\\"T:Newtonsoft.Json.Converters.StringEnumConverter\\\"/> class.\",\n    \"            </summary>\",\n    \"            <param name=\\\"camelCaseText\\\"><c>true</c> if the written enum text will be camel case; otherwise, <c>false</c>.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.StringEnumConverter.#ctor(Newtonsoft.Json.Serialization.NamingStrategy,System.Boolean)\\\">\",\n    \"            <summary>\",\n    \"            Initializes a new instance of the <see cref=\\\"T:Newtonsoft.Json.Converters.StringEnumConverter\\\"/> class.\",\n    \"            </summary>\",\n    \"            <param name=\\\"namingStrategy\\\">The naming strategy used to resolve how enum text is written.</param>\",\n    \"            <param name=\\\"allowIntegerValues\\\"><c>true</c> if integers are allowed when serializing and deserializing; otherwise, <c>false</c>.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.StringEnumConverter.#ctor(System.Type)\\\">\",\n    \"            <summary>\",\n    \"            Initializes a new instance of the <see cref=\\\"T:Newtonsoft.Json.Converters.StringEnumConverter\\\"/> class.\",\n    \"            </summary>\",\n    \"            <param name=\\\"namingStrategyType\\\">The <see cref=\\\"T:System.Type\\\"/> of the <see cref=\\\"T:Newtonsoft.Json.Serialization.NamingStrategy\\\"/> used to write enum text.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.StringEnumConverter.#ctor(System.Type,System.Object[])\\\">\",\n    \"            <summary>\",\n    \"            Initializes a new instance of the <see cref=\\\"T:Newtonsoft.Json.Converters.StringEnumConverter\\\"/> class.\",\n    \"            </summary>\",\n    \"            <param name=\\\"namingStrategyType\\\">The <see cref=\\\"T:System.Type\\\"/> of the <see cref=\\\"T:Newtonsoft.Json.Serialization.NamingStrategy\\\"/> used to write enum text.</param>\",\n    \"            <param name=\\\"namingStrategyParameters\\\">\",\n    \"            The parameter list to use when constructing the <see cref=\\\"T:Newtonsoft.Json.Serialization.NamingStrategy\\\"/> described by <paramref name=\\\"namingStrategyType\\\"/>.\",\n    \"            If <c>null</c>, the default constructor is used.\",\n    \"            When non-<c>null</c>, there must be a constructor defined in the <see cref=\\\"T:Newtonsoft.Json.Serialization.NamingStrategy\\\"/> that exactly matches the number,\",\n    \"            order, and type of these parameters.\",\n    \"            </param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.StringEnumConverter.#ctor(System.Type,System.Object[],System.Boolean)\\\">\",\n    \"            <summary>\",\n    \"            Initializes a new instance of the <see cref=\\\"T:Newtonsoft.Json.Converters.StringEnumConverter\\\"/> class.\",\n    \"            </summary>\",\n    \"            <param name=\\\"namingStrategyType\\\">The <see cref=\\\"T:System.Type\\\"/> of the <see cref=\\\"T:Newtonsoft.Json.Serialization.NamingStrategy\\\"/> used to write enum text.</param>\",\n    \"            <param name=\\\"namingStrategyParameters\\\">\",\n    \"            The parameter list to use when constructing the <see cref=\\\"T:Newtonsoft.Json.Serialization.NamingStrategy\\\"/> described by <paramref name=\\\"namingStrategyType\\\"/>.\",\n    \"            If <c>null</c>, the default constructor is used.\",\n    \"            When non-<c>null</c>, there must be a constructor defined in the <see cref=\\\"T:Newtonsoft.Json.Serialization.NamingStrategy\\\"/> that exactly matches the number,\",\n    \"            order, and type of these parameters.\",\n    \"            </param>\",\n    \"            <param name=\\\"allowIntegerValues\\\"><c>true</c> if integers are allowed when serializing and deserializing; otherwise, <c>false</c>.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)\\\">\",\n    \"            <summary>\",\n    \"            Writes the JSON representation of the object.\",\n    \"            </summary>\",\n    \"            <param name=\\\"writer\\\">The <see cref=\\\"T:Newtonsoft.Json.JsonWriter\\\"/> to write to.</param>\",\n    \"            <param name=\\\"value\\\">The value.</param>\",\n    \"            <param name=\\\"serializer\\\">The calling serializer.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)\\\">\",\n    \"            <summary>\",\n    \"            Reads the JSON representation of the object.\",\n    \"            </summary>\",\n    \"            <param name=\\\"reader\\\">The <see cref=\\\"T:Newtonsoft.Json.JsonReader\\\"/> to read from.</param>\",\n    \"            <param name=\\\"objectType\\\">Type of the object.</param>\",\n    \"            <param name=\\\"existingValue\\\">The existing value of object being read.</param>\",\n    \"            <param name=\\\"serializer\\\">The calling serializer.</param>\",\n    \"            <returns>The object value.</returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.StringEnumConverter.CanConvert(System.Type)\\\">\",\n    \"            <summary>\",\n    \"            Determines whether this instance can convert the specified object type.\",\n    \"            </summary>\",\n    \"            <param name=\\\"objectType\\\">Type of the object.</param>\",\n    \"            <returns>\",\n    \"            <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.\",\n    \"            </returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"T:Newtonsoft.Json.Converters.UnixDateTimeConverter\\\">\",\n    \"            <summary>\",\n    \"            Converts a <see cref=\\\"T:System.DateTime\\\"/> to and from Unix epoch time\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.UnixDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)\\\">\",\n    \"            <summary>\",\n    \"            Writes the JSON representation of the object.\",\n    \"            </summary>\",\n    \"            <param name=\\\"writer\\\">The <see cref=\\\"T:Newtonsoft.Json.JsonWriter\\\"/> to write to.</param>\",\n    \"            <param name=\\\"value\\\">The value.</param>\",\n    \"            <param name=\\\"serializer\\\">The calling serializer.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)\\\">\",\n    \"            <summary>\",\n    \"            Reads the JSON representation of the object.\",\n    \"            </summary>\",\n    \"            <param name=\\\"reader\\\">The <see cref=\\\"T:Newtonsoft.Json.JsonReader\\\"/> to read from.</param>\",\n    \"            <param name=\\\"objectType\\\">Type of the object.</param>\",\n    \"            <param name=\\\"existingValue\\\">The existing property value of the JSON that is being converted.</param>\",\n    \"            <param name=\\\"serializer\\\">The calling serializer.</param>\",\n    \"            <returns>The object value.</returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"T:Newtonsoft.Json.Converters.VersionConverter\\\">\",\n    \"            <summary>\",\n    \"            Converts a <see cref=\\\"T:System.Version\\\"/> to and from a string (e.g. <c>\\\"1.2.3.4\\\"</c>).\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.VersionConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)\\\">\",\n    \"            <summary>\",\n    \"            Writes the JSON representation of the object.\",\n    \"            </summary>\",\n    \"            <param name=\\\"writer\\\">The <see cref=\\\"T:Newtonsoft.Json.JsonWriter\\\"/> to write to.</param>\",\n    \"            <param name=\\\"value\\\">The value.</param>\",\n    \"            <param name=\\\"serializer\\\">The calling serializer.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.VersionConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)\\\">\",\n    \"            <summary>\",\n    \"            Reads the JSON representation of the object.\",\n    \"            </summary>\",\n    \"            <param name=\\\"reader\\\">The <see cref=\\\"T:Newtonsoft.Json.JsonReader\\\"/> to read from.</param>\",\n    \"            <param name=\\\"objectType\\\">Type of the object.</param>\",\n    \"            <param name=\\\"existingValue\\\">The existing property value of the JSON that is being converted.</param>\",\n    \"            <param name=\\\"serializer\\\">The calling serializer.</param>\",\n    \"            <returns>The object value.</returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.VersionConverter.CanConvert(System.Type)\\\">\",\n    \"            <summary>\",\n    \"            Determines whether this instance can convert the specified object type.\",\n    \"            </summary>\",\n    \"            <param name=\\\"objectType\\\">Type of the object.</param>\",\n    \"            <returns>\",\n    \"            \",\n    \"<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.\",\n    \"            </returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"T:Newtonsoft.Json.Converters.XmlNodeConverter\\\">\",\n    \"            <summary>\",\n    \"            Converts XML to and from JSON.\",\n    \"            </summary>\",\n    \"        </member>\",\n    \"        <member name=\\\"P:Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeRootElementName\\\">\",\n    \"            <summary>\",\n    \"            Gets or sets the name of the root element to insert when deserializing to XML if the JSON structure has produced multiple root elements.\",\n    \"            </summary>\",\n    \"            <value>The name of the deserialized root element.</value>\",\n    \"        </member>\",\n    \"        <member name=\\\"P:Newtonsoft.Json.Converters.XmlNodeConverter.WriteArrayAttribute\\\">\",\n    \"            <summary>\",\n    \"            Gets or sets a value to indicate whether to write the Json.NET array attribute.\",\n    \"            This attribute helps preserve arrays when converting the written XML back to JSON.\",\n    \"            </summary>\",\n    \"            <value><c>true</c> if the array attribute is written to the XML; otherwise, <c>false</c>.</value>\",\n    \"        </member>\",\n    \"        <member name=\\\"P:Newtonsoft.Json.Converters.XmlNodeConverter.OmitRootObject\\\">\",\n    \"            <summary>\",\n    \"            Gets or sets a value indicating whether to write the root JSON object.\",\n    \"            </summary>\",\n    \"            <value><c>true</c> if the JSON root object is omitted; otherwise, <c>false</c>.</value>\",\n    \"        </member>\",\n    \"        <member name=\\\"P:Newtonsoft.Json.Converters.XmlNodeConverter.EncodeSpecialCharacters\\\">\",\n    \"            <summary>\",\n    \"            Gets or sets a value indicating whether to encode special characters when converting JSON to XML.\",\n    \"            If <c>true</c>, special characters like ':', '@', '?', '#' and '$' in JSON property names aren't used to specify\",\n    \"            XML namespaces, attributes or processing directives. Instead special characters are encoded and written\",\n    \"            as part of the XML element name.\",\n    \"            </summary>\",\n    \"            <value><c>true</c> if special characters are encoded; otherwise, <c>false</c>.</value>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)\\\">\",\n    \"            <summary>\",\n    \"            Writes the JSON representation of the object.\",\n    \"            </summary>\",\n    \"            <param name=\\\"writer\\\">The <see cref=\\\"T:Newtonsoft.Json.JsonWriter\\\"/> to write to.</param>\",\n    \"            <param name=\\\"serializer\\\">The calling serializer.</param>\",\n    \"            <param name=\\\"value\\\">The value.</param>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)\\\">\",\n    \"            <summary>\",\n    \"            Reads the JSON representation of the object.\",\n    \"            </summary>\",\n    \"            <param name=\\\"reader\\\">The <see cref=\\\"T:Newtonsoft.Json.JsonReader\\\"/> to read from.</param>\",\n    \"            <param name=\\\"objectType\\\">Type of the object.</param>\",\n    \"            <param name=\\\"existingValue\\\">The existing value of object being read.</param>\",\n    \"            <param name=\\\"serializer\\\">The calling serializer.</param>\",\n    \"            <returns>The object value.</returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(System.String,System.String@)\\\">\",\n    \"            <summary>\",\n    \"            Checks if the <paramref name=\\\"attributeName\\\"/> is a namespace attribute.\",\n    \"            </summary>\",\n    \"            <param name=\\\"attributeName\\\">Attribute name to test.</param>\",\n    \"            <param name=\\\"prefix\\\">The attribute name prefix if it has one, otherwise an empty string.</param>\",\n    \"            <returns><c>true</c> if attribute name is for a namespace attribute, otherwise <c>false</c>.</returns>\",\n    \"        </member>\",\n    \"        <member name=\\\"M:Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)\\\">\",\n    \"            <summary>\",\n    \"            Determines whether this instance can convert the specified value type.\",\n    \"            </summary>\",\n    \"            <param name=\\\"valueType\\\">Type of the value.</param>\",\n    \"            <returns>\",\n    \"            \",\n    \"<c>true</c> if this instance can convert the specified value type; otherwise, <c>false</c>.\"\n  ],\n  \"hex_dump\": null,\n  \"binary_info\": null,\n  \"signatures\": null,\n  \"symbols\": null,\n  \"control_flow\": null,\n  \"vulnerabilities\": null,\n  \"code_quality\": null,\n  \"dependencies\": null,\n  \"entropy\": null,\n  \"disassembly\": null,\n  \"threats\": null,\n  \"behavioral\": null,\n  \"yara_indicators\": null\n}"}]}}
