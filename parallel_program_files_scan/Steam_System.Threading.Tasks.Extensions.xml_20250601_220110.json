{"jsonrpc":"2.0","id":1,"result":{"content":[{"type":"text","text":"{\n  \"file_path\": \"/windows/Program Files (x86)/Steam/steamapps/common/EVGA PrecisionX/Library/System.Threading.Tasks.Extensions.xml\",\n  \"metadata\": {\n    \"file_path\": \"/windows/Program Files (x86)/Steam/steamapps/common/EVGA PrecisionX/Library/System.Threading.Tasks.Extensions.xml\",\n    \"file_name\": \"System.Threading.Tasks.Extensions.xml\",\n    \"file_size\": 10147,\n    \"created\": \"2023-03-21T18:54:15.690314100Z\",\n    \"modified\": \"2023-03-21T18:54:15.690314100Z\",\n    \"accessed\": \"2025-05-30T11:23:18.662370900Z\",\n    \"permissions\": \"755\",\n    \"is_executable\": true,\n    \"mime_type\": \"application/octet-stream\",\n    \"hashes\": {\n      \"md5\": \"c89e735fcf37e76e4c3d7903d2111c04\",\n      \"sha256\": \"975a9555f561b363c3e02fd533f6bf7083aa11bbc7cbf2b46c31df3d3696b97b\",\n      \"sha512\": \"debdd8d0ed2ff6ad7b175acfeb1681b1a68eeedd6d717e20e6ac5e0d11c13a1219b4d60f9319939c63bf4b53456328531369f4a9fff5b201475858310e385007\",\n      \"blake3\": \"f716061542b70b9a21fb4b5c7633c5dc5cd70e4eb0f86c2e8c575527cddaf8f9\"\n    },\n    \"binary_info\": null,\n    \"extracted_strings\": null,\n    \"signature_info\": null,\n    \"hex_dump\": null,\n    \"owner_uid\": 1000,\n    \"group_gid\": 1000\n  },\n  \"hashes\": {\n    \"md5\": \"c89e735fcf37e76e4c3d7903d2111c04\",\n    \"sha256\": \"975a9555f561b363c3e02fd533f6bf7083aa11bbc7cbf2b46c31df3d3696b97b\",\n    \"sha512\": \"debdd8d0ed2ff6ad7b175acfeb1681b1a68eeedd6d717e20e6ac5e0d11c13a1219b4d60f9319939c63bf4b53456328531369f4a9fff5b201475858310e385007\",\n    \"blake3\": \"f716061542b70b9a21fb4b5c7633c5dc5cd70e4eb0f86c2e8c575527cddaf8f9\"\n  },\n  \"strings\": [\n    \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><doc>\",\n    \"  <assembly>\",\n    \"    <name>System.Threading.Tasks.Extensions</name>\",\n    \"  </assembly>\",\n    \"  <members>\",\n    \"    <member name=\\\"T:System.Runtime.CompilerServices.ValueTaskAwaiter`1\\\">\",\n    \"      <typeparam name=\\\"TResult\\\"></typeparam>\",\n    \"    </member>\",\n    \"    <member name=\\\"M:System.Runtime.CompilerServices.ValueTaskAwaiter`1.GetResult\\\">\",\n    \"      <returns></returns>\",\n    \"    </member>\",\n    \"    <member name=\\\"P:System.Runtime.CompilerServices.ValueTaskAwaiter`1.IsCompleted\\\">\",\n    \"      <returns></returns>\",\n    \"    </member>\",\n    \"    <member name=\\\"M:System.Runtime.CompilerServices.ValueTaskAwaiter`1.OnCompleted(System.Action)\\\">\",\n    \"      <param name=\\\"continuation\\\"></param>\",\n    \"    </member>\",\n    \"    <member name=\\\"M:System.Runtime.CompilerServices.ValueTaskAwaiter`1.UnsafeOnCompleted(System.Action)\\\">\",\n    \"      <param name=\\\"continuation\\\"></param>\",\n    \"    </member>\",\n    \"    <member name=\\\"T:System.Threading.Tasks.ValueTask`1\\\">\",\n    \"      <summary>Provides a value type that wraps a <see cref=\\\"Task{TResult}\\\"></see> and a <typeparamref name=\\\"TResult\\\">TResult</typeparamref>, only one of which is used.</summary>\",\n    \"      <typeparam name=\\\"TResult\\\">The result.</typeparam>\",\n    \"    </member>\",\n    \"    <member name=\\\"M:System.Threading.Tasks.ValueTask`1.#ctor(System.Threading.Tasks.Task{`0})\\\">\",\n    \"      <summary>Initializes a new instance of the <see cref=\\\"ValueTask{TResult}\\\"></see> class using the supplied task that represents the operation.</summary>\",\n    \"      <param name=\\\"task\\\">The task.</param>\",\n    \"      <exception cref=\\\"T:System.ArgumentNullException\\\">The <paramref name=\\\"task\\\">task</paramref> argument is null.</exception>\",\n    \"    </member>\",\n    \"    <member name=\\\"M:System.Threading.Tasks.ValueTask`1.#ctor(`0)\\\">\",\n    \"      <summary>Initializes a new instance of the <see cref=\\\"ValueTask{TResult}\\\"></see> class using the supplied result of a successful operation.</summary>\",\n    \"      <param name=\\\"result\\\">The result.</param>\",\n    \"    </member>\",\n    \"    <member name=\\\"M:System.Threading.Tasks.ValueTask`1.AsTask\\\">\",\n    \"      <summary>Retrieves a <see cref=\\\"Task{TResult}\\\"></see> object that represents this <see cref=\\\"ValueTask{TResult}\\\"></see>.</summary>\",\n    \"      <returns>The <see cref=\\\"Task{TResult}\\\"></see> object that is wrapped in this <see cref=\\\"ValueTask{TResult}\\\"></see> if one exists, or a new <see cref=\\\"Task{TResult}\\\"></see> object that represents the result.</returns>\",\n    \"    </member>\",\n    \"    <member name=\\\"M:System.Threading.Tasks.ValueTask`1.ConfigureAwait(System.Boolean)\\\">\",\n    \"      <summary>Configures an awaiter for this value.</summary>\",\n    \"      <param name=\\\"continueOnCapturedContext\\\">true to attempt to marshal the continuation back to the captured context; otherwise, false.</param>\",\n    \"      <returns>The configured awaiter.</returns>\",\n    \"    </member>\",\n    \"    <member name=\\\"M:System.Threading.Tasks.ValueTask`1.CreateAsyncMethodBuilder\\\">\",\n    \"      <summary>Creates a method builder for use with an async method.</summary>\",\n    \"      <returns>The created builder.</returns>\",\n    \"    </member>\",\n    \"    <member name=\\\"M:System.Threading.Tasks.ValueTask`1.Equals(System.Object)\\\">\",\n    \"      <summary>Determines whether the specified object is equal to the current object.</summary>\",\n    \"      <param name=\\\"obj\\\">The object to compare with the current object.</param>\",\n    \"      <returns>true if the specified object is equal to the current object; otherwise, false.</returns>\",\n    \"    </member>\",\n    \"    <member name=\\\"M:System.Threading.Tasks.ValueTask`1.Equals(System.Threading.Tasks.ValueTask{`0})\\\">\",\n    \"      <summary>Determines whether the specified <see cref=\\\"ValueTask{TResult}\\\"></see> object is equal to the current <see cref=\\\"ValueTask{TResult}\\\"></see> object.</summary>\",\n    \"      <param name=\\\"other\\\">The object to compare with the current object.</param>\",\n    \"      <returns>true if the specified object is equal to the current object; otherwise, false.</returns>\",\n    \"    </member>\",\n    \"    <member name=\\\"M:System.Threading.Tasks.ValueTask`1.GetAwaiter\\\">\",\n    \"      <summary>Creates an awaiter for this value.</summary>\",\n    \"      <returns>The awaiter.</returns>\",\n    \"    </member>\",\n    \"    <member name=\\\"M:System.Threading.Tasks.ValueTask`1.GetHashCode\\\">\",\n    \"      <summary>Returns the hash code for this instance.</summary>\",\n    \"      <returns>The hash code for the current object.</returns>\",\n    \"    </member>\",\n    \"    <member name=\\\"P:System.Threading.Tasks.ValueTask`1.IsCanceled\\\">\",\n    \"      <summary>Gets a value that indicates whether this object represents a canceled operation.</summary>\",\n    \"      <returns>true if this object represents a canceled operation; otherwise, false.</returns>\",\n    \"    </member>\",\n    \"    <member name=\\\"P:System.Threading.Tasks.ValueTask`1.IsCompleted\\\">\",\n    \"      <summary>Gets a value that indicates whether this object represents a completed operation.</summary>\",\n    \"      <returns>true if this object represents a completed operation; otherwise, false.</returns>\",\n    \"    </member>\",\n    \"    <member name=\\\"P:System.Threading.Tasks.ValueTask`1.IsCompletedSuccessfully\\\">\",\n    \"      <summary>Gets a value that indicates whether this object represents a successfully completed operation.</summary>\",\n    \"      <returns>true if this object represents a successfully completed operation; otherwise, false.</returns>\",\n    \"    </member>\",\n    \"    <member name=\\\"P:System.Threading.Tasks.ValueTask`1.IsFaulted\\\">\",\n    \"      <summary>Gets a value that indicates whether this object represents a failed operation.</summary>\",\n    \"      <returns>true if this object represents a failed operation; otherwise, false.</returns>\",\n    \"    </member>\",\n    \"    <member name=\\\"M:System.Threading.Tasks.ValueTask`1.op_Equality(System.Threading.Tasks.ValueTask{`0},System.Threading.Tasks.ValueTask{`0})\\\">\",\n    \"      <summary>Compares two values for equality.</summary>\",\n    \"      <param name=\\\"left\\\">The first value to compare.</param>\",\n    \"      <param name=\\\"right\\\">The second value to compare.</param>\",\n    \"      <returns>true if the two <see cref=\\\"ValueTask{TResult}\\\"></see> values are equal; otherwise, false.</returns>\",\n    \"    </member>\",\n    \"    <member name=\\\"M:System.Threading.Tasks.ValueTask`1.op_Inequality(System.Threading.Tasks.ValueTask{`0},System.Threading.Tasks.ValueTask{`0})\\\">\",\n    \"      <summary>Determines whether two <see cref=\\\"ValueTask{TResult}\\\"></see> values are unequal.</summary>\",\n    \"      <param name=\\\"left\\\">The first value to compare.</param>\",\n    \"      <param name=\\\"right\\\">The seconed value to compare.</param>\",\n    \"      <returns>true if the two <see cref=\\\"ValueTask{TResult}\\\"></see> values are not equal; otherwise, false.</returns>\",\n    \"    </member>\",\n    \"    <member name=\\\"P:System.Threading.Tasks.ValueTask`1.Result\\\">\",\n    \"      <summary>Gets the result.</summary>\",\n    \"      <returns>The result.</returns>\",\n    \"    </member>\",\n    \"    <member name=\\\"M:System.Threading.Tasks.ValueTask`1.ToString\\\">\",\n    \"      <summary>Returns a string that represents the current object.</summary>\",\n    \"      <returns>A string that represents the current object.</returns>\",\n    \"    </member>\",\n    \"    <member name=\\\"T:System.Runtime.CompilerServices.AsyncMethodBuilderAttribute\\\">\",\n    \"      \",\n    \"    </member>\",\n    \"    <member name=\\\"M:System.Runtime.CompilerServices.AsyncMethodBuilderAttribute.#ctor(System.Type)\\\">\",\n    \"      <param name=\\\"builderType\\\"></param>\",\n    \"    </member>\",\n    \"    <member name=\\\"P:System.Runtime.CompilerServices.AsyncMethodBuilderAttribute.BuilderType\\\">\",\n    \"      <returns></returns>\",\n    \"    </member>\",\n    \"    <member name=\\\"T:System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1\\\">\",\n    \"      <typeparam name=\\\"TResult\\\"></typeparam>\",\n    \"    </member>\",\n    \"    <member name=\\\"M:System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.AwaitOnCompleted``2(``0@,``1@)\\\">\",\n    \"      <param name=\\\"awaiter\\\"></param>\",\n    \"      <param name=\\\"stateMachine\\\"></param>\",\n    \"      <typeparam name=\\\"TAwaiter\\\"></typeparam>\",\n    \"      <typeparam name=\\\"TStateMachine\\\"></typeparam>\",\n    \"    </member>\",\n    \"    <member name=\\\"M:System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.AwaitUnsafeOnCompleted``2(``0@,``1@)\\\">\",\n    \"      <param name=\\\"awaiter\\\"></param>\",\n    \"      <param name=\\\"stateMachine\\\"></param>\",\n    \"      <typeparam name=\\\"TAwaiter\\\"></typeparam>\",\n    \"      <typeparam name=\\\"TStateMachine\\\"></typeparam>\",\n    \"    </member>\",\n    \"    <member name=\\\"M:System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.Create\\\">\",\n    \"      <returns></returns>\",\n    \"    </member>\",\n    \"    <member name=\\\"M:System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetException(System.Exception)\\\">\",\n    \"      <param name=\\\"exception\\\"></param>\",\n    \"    </member>\",\n    \"    <member name=\\\"M:System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(`0)\\\">\",\n    \"      <param name=\\\"result\\\"></param>\",\n    \"    </member>\",\n    \"    <member name=\\\"M:System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)\\\">\",\n    \"      <param name=\\\"stateMachine\\\"></param>\",\n    \"    </member>\",\n    \"    <member name=\\\"M:System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.Start``1(``0@)\\\">\",\n    \"      <param name=\\\"stateMachine\\\"></param>\",\n    \"      <typeparam name=\\\"TStateMachine\\\"></typeparam>\",\n    \"    </member>\",\n    \"    <member name=\\\"P:System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.Task\\\">\",\n    \"      <returns></returns>\",\n    \"    </member>\",\n    \"    <member name=\\\"T:System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1.ConfiguredValueTaskAwaiter\\\">\",\n    \"      <typeparam name=\\\"TResult\\\"></typeparam>\",\n    \"    </member>\",\n    \"    <member name=\\\"M:System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1.ConfiguredValueTaskAwaiter.GetResult\\\">\",\n    \"      <returns></returns>\",\n    \"    </member>\",\n    \"    <member name=\\\"P:System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1.ConfiguredValueTaskAwaiter.IsCompleted\\\">\",\n    \"      <returns></returns>\",\n    \"    </member>\",\n    \"    <member name=\\\"M:System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1.ConfiguredValueTaskAwaiter.OnCompleted(System.Action)\\\">\",\n    \"      <param name=\\\"continuation\\\"></param>\",\n    \"    </member>\",\n    \"    <member name=\\\"M:System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1.ConfiguredValueTaskAwaiter.UnsafeOnCompleted(System.Action)\\\">\",\n    \"      <param name=\\\"continuation\\\"></param>\",\n    \"    </member>\",\n    \"    <member name=\\\"T:System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1\\\">\",\n    \"      <typeparam name=\\\"TResult\\\"></typeparam>\",\n    \"    </member>\",\n    \"    <member name=\\\"M:System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1.GetAwaiter\\\">\",\n    \"      <returns></returns>\",\n    \"    </member>\",\n    \"  </members>\",\n    \"</doc>\"\n  ],\n  \"hex_dump\": null,\n  \"binary_info\": null,\n  \"signatures\": null,\n  \"symbols\": null,\n  \"control_flow\": null,\n  \"vulnerabilities\": null,\n  \"code_quality\": null,\n  \"dependencies\": null,\n  \"entropy\": null,\n  \"disassembly\": null,\n  \"threats\": null,\n  \"behavioral\": null,\n  \"yara_indicators\": null\n}"}]}}
