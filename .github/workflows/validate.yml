name: Validate Workflows

on:
  pull_request:
    paths:
      - '.github/workflows/**'
  push:
    paths:
      - '.github/workflows/**'
  workflow_dispatch:

jobs:
  validate-workflows:
    name: Validate Workflow Files
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Install workflow validation tools
        run: |
          pip install yamllint

      - name: Validate YAML syntax
        run: |
          for file in .github/workflows/*.yml .github/workflows/*.yaml; do
            if [ -f "$file" ]; then
              echo "Validating $file..."
              yamllint "$file"
            fi
          done

      - name: Run project CI checks (includes lint and format validation)
        run: make ci

      - name: Check for required workflow files
        run: |
          echo "Checking for required workflow files..."
          test -f .github/workflows/release.yml && echo "✓ Release workflow found" || echo "✗ Release workflow missing"
          test -f .github/workflows/docker.yml && echo "✓ Docker workflow found" || echo "✗ Docker workflow missing"
          test -f .github/workflows/ci.yml && echo "✓ CI workflow found" || echo "✗ CI workflow missing"

  test-docker-build:
    name: Test Docker Build
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2  # v3.10.0

      - name: Test Docker build (no push)
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83  # v6.18.0
        with:
          context: .
          platforms: linux/amd64
          push: false
          tags: test-build:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
